openapi: 3.0.2
info:
  contact:
    email: tk450@sis.se
  description: "Detta är en implementationsspecifikation av SS12000:2020 [TK450](https://www.sis.se/standardutveckling/tksidor/tk400499/sistk450/)\n"
  termsOfService: https://www.sis.se/standardutveckling/tksidor/tk400499/sistk450/
  title: SS12000
  version: 2.1.0
externalDocs:
  description: För mer information hämtas från SIS - TK450
  url: https://sis.se/standardutveckling/tksidor/tk400499/sistk450/
servers:
- description: SS12000
  url: http://some.server.se/v2.0
security:
- BearerAuth: []
tags:
- description: Skolans organisation och grundläggande administration.
  name: Organisation
- description: Hanterar personer och personers relationer.
  name: Person
- description: Grupper.
  name: Grupper
- description: "Information om kurser, ämnen, program och studieplaner."
  name: Studieinformation
- description: Aktiviteter knyter ihop lärare och elever med ämne eller kurs.
  name: Aktiviteter
- description: Kalenderposter kopplat till aktiviteter
  name: Kalenderhändelser
- description: Salar och resurser som kan schemaläggas.
  name: Rum och resurser
- description: Information runt en elevs närvaro.
  name: Närvaro
- description: Schema för omsorgstider på förskola eller fritidshem.
  name: Vistelseschema
- description: |
    In- och utpassering. Används för närvarohantering i förskola och fritidshem (utan kopplingar till kalenderhändelser).
  name: Närvarohändelser
- description: Metod för att följa borttag av entititer.
  name: Borttag
- description: Webhook för att prenumerera på uppdateringar.
  name: Prenumeration
- description: Ändpunkter för återrapportering av statistik och händelser.
  name: Loggning
paths:
  /organisations:
    get:
      parameters:
      - description: Begränsa urvalet till utpekade organisations-ID:n.
        in: query
        name: parent
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: |
          Begränsa urvalet till de skolenheter som har den angivna Skolenhetskoden. En Identifierare för skolenheten enligt Skolverket.
        in: query
        name: schoolUnitCode
        schema:
          items:
            type: string
          type: array
      - description: |
          Begränsa urvalet till de organisationselement som har den angivna koden.
        in: query
        name: organisationCode
        schema:
          items:
            type: string
          type: array
      - description: |
          Begränsa urvalet till de organisationselement som har angiven kommunkod.
        in: query
        name: municipalityCode
        schema:
          type: string
      - description: Begränsa urvalet till utpekade typ.
        in: query
        name: type
        schema:
          items:
            $ref: '#/components/schemas/OrganisationTypeEnum'
          type: array
      - description: |
          Begränsa urvalet till de organisationselement som har den angivna skolformen.
        in: query
        name: schoolTypes
        schema:
          items:
            $ref: '#/components/schemas/SchoolTypesEnum'
          type: array
      - description: "Begränsa urvalet till organisationselement som har ett startDate\
          \ värde innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till organisationselement som har ett startDate\
          \ värde på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till organisationselement som har ett endDate\
          \ värde innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till organisationselement som har ett endDate\
          \ värde på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - DisplayNameAsc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisations'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med organisationer.
      tags:
      - Organisation
  /organisations/lookup:
    post:
      description: |
        Istället för att hämta organisationer en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många organisationer på en gång genom att skicka ett anrop med en lista med önskade organisationer.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_organisations_lookup_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många organisationer baserat på en lista av ID:n.
      tags:
      - Organisation
  /organisations/{id}:
    get:
      parameters:
      - description: ID för organisationen som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en organisation baserat på ID
      tags:
      - Organisation
  /persons:
    get:
      parameters:
      - description: "Begränsa urvalet till de personer vars namn innehåller något\
          \ av parameterns värden.\nSökningen **ska** ske shiftlägesokänsligt och\
          \ värdet kan förekomma var som helst i något av alla tre namnfälten. \n\
          Anges flera värden så måste samtliga värden matcha minst ett av namnfälten.\n\
          \nExempel: [ \"Pa\", \"gens\" ] kommer matcha Palle Girgensohn.\n"
        in: query
        name: nameContains
        schema:
          items:
            type: string
          type: array
      - description: Begränsa urvalet till den person vars civicNo matchar parameterns
          värde.
        in: query
        name: civicNo
        schema:
          type: string
      - description: Begränsa urvalet till den person vars eduPersonPrincipalNames
          matchar parameterns värde.
        in: query
        name: eduPersonPrincipalName
        schema:
          type: string
      - description: Begränsa urvalet till den person vilka har ett värde i `externalIdentifiers.value`
          som matchar parameterns värde. Kan kombineras med parametern `identifier.context`
          för att begränsa matchningen till en specifik typ av indentifierare.
        in: query
        name: identifier.value
        schema:
          type: string
      - description: Begränsa urvalet till den person vilka har ett värde i `externalIdentifiers.context`
          som matchar parameterns värde. Kombineras vanligtvis med `identifier.value`
          parametern.
        in: query
        name: identifier.context
        schema:
          type: string
      - description: "Begränsa urvalet till de personer som har en denna typ av relation\
          \ till andra entititeter. \nDenna parameter styr vilket entitetstyp som\
          \ övriga relationship-parametrar filterar på.\nAnges inga andra parametrar\
          \ så returneras personer som har en relation av denna typ.\n\nMöjliga relationer:\n\
          - _enrolment_ - filtrerar utifrån elever inskrivning.\n- _duty_ - filtrerar\
          \ utifrån personer som har minst en tjänstgöring.\n- _placement.child_ -\
          \ filtrerar utifrån barn som har minst en placering.\n- _placement.owner_\
          \ - filtrerar utifrån personer som satta som ägare av minst en placering.\n\
          - _responsibleFor.enrolment_ - filterar utifrån personer som har en _\"\
          responsibleFor\"_-relation, dvs är en vårdnadshavare eller annan ansvarig\
          \ vuxen, till en elev med minst en inskrivning.\n- _responsibleFor.placement_\
          \ - filterar utifrån personer som har en _\"responsibleFor\"_-relation,\
          \ dvs är en vårdnadshavare eller annan ansvarig vuxen, till ett barn med\
          \ minst en placering.\n  Notera att oftast är det bättre att använda _placement.owner_\
          \ än denna parameter.\n- _groupMembership_ - filtrerar utifrån gruppmedlemsskap\n\
          \nDetta kan kombineras med `relationship.startDate.onOrBefore` och `relationship.endDate.onOrAfter`\
          \ för att begränsa till aktiva relationer.\n"
        in: query
        name: relationship.entity.type
        schema:
          enum:
          - enrolment
          - duty
          - placement.child
          - placement.owner
          - responsibleFor.enrolment
          - responsibleFor.placement
          - groupMembership
          type: string
      - description: "Begränsa urvalet till de personer som har en relation till angivet\
          \ organisationselement (vanligtvis en skolenhet). \nFör att begränsa till\
          \ en viss relationtyp används parametern `relationship.entity.type`.\n\n\
          Följande fält/relationer används vid filtreringen:\n- _enrolment_ - poster\
          \ matchandes `person.enrolment.enroledAt`\n- _duty_ - person poster matchandes\
          \ `duty.person` i en lista filtrerad utifrån `duty.dutyAt`.\n- _placement.child_\
          \ - person poster matchandes `placement.child` i en lista filtrerad utifrå\
          n `placement.placedAt`.\n- _placement.owner_ - person poster matchandes\
          \ `placement.owner` i en lista filtrerad utifrån `placement.placedAt`.\n\
          - _responsibleFor.enrolment_ - person poster matchandes `person.responsibles`\
          \ i en lista filtrerad utifrån `person.enrolment.enroledAt`.\n- _responsibleFor.placement_\
          \ - person poster matchandes `person.responsibles` i en lista med person\
          \ poster som i sin tur matchar `placement.child` i en lista filtrerad utifrå\
          n `placement.placedAt`.\n- _groupMembership_ - person poster matchandes\
          \ `person.groupMemberships`\n"
        in: query
        name: relationship.organisation
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet av personer till de som har relationer med\
          \ startDate innan eller på det angivna datumet (RFC 3339-format, t.ex. \"\
          2016-10-15\"). \nPoster med ett startDate som ej är satt, tas alltid med.\
          \ \nFör att begränsa till en viss relationtyp används parametern `relationship.entity.type`.\n\
          \nFöljande fält/relationer används vid filtreringen:\n- _enrolment_ - poster\
          \ matchandes `person.enrolment.startDate`\n- _duty_ - person poster matchandes\
          \ `duty.person` i en lista filtrerad utifrån `duty.startDate`.\n- _placement.child_\
          \ - person poster matchandes `placement.child` i en lista filtrerad utifrå\
          n `placement.startDate`.\n- _placement.owner_ - person poster matchandes\
          \ `placement.owner` i en lista filtrerad utifrån `placement.startDate`.\n\
          - _responsibleFor.enrolment_ - person poster matchandes `person.responsibles`\
          \ i en lista filtrerad utifrån `person.enrolment.startDate`.\n- _responsibleFor.placement_\
          \ - person poster matchandes `person.responsibles` i en lista med person\
          \ poster som i sin tur matchar `placement.child` i en lista filtrerad utifrå\
          n `placement.startDate`.\n- _groupMembership_ - poster matchandes `group.groupMemberships.person`\
          \ eller `group.assignmentRole.duty.person` i en lista filtrerad utifrån\
          \ `group.groupMemberships.startDate` eller `group.assignmentRole.startDate`.\n\
          \  \nDetta kan kombineras med _relationship.endDate.onOrAfter_ för att begrä\
          nsa till aktiva relationer.\n"
        in: query
        name: relationship.startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet av personer till de som har relationer med\
          \ startDate efter eller på det angivna datumet (RFC 3339-format, t.ex. \"\
          2016-10-15\"). \nPoster med ett startDate som ej är satt, tas alltid med.\
          \ \nFör att begränsa till en viss relationtyp används parametern `relationship.entity.type`.\n\
          \nFöljande fält/relationer används vid filtreringen:\n- _enrolment_ - poster\
          \ matchandes `person.enrolment.startDate`\n- _duty_ - person poster matchandes\
          \ `duty.person` i en lista filtrerad utifrån `duty.startDate`.\n- _placement.child_\
          \ - person poster matchandes `placement.child` i en lista filtrerad utifrå\
          n `placement.startDate`.\n- _placement.owner_ - person poster matchandes\
          \ `placement.owner` i en lista filtrerad utifrån `placement.startDate`.\n\
          - _responsibleFor.enrolment_ - person poster matchandes `person.responsibles`\
          \ i en lista filtrerad utifrån `person.enrolment.startDate`.\n- _responsibleFor.placement_\
          \ - person poster matchandes `person.responsibles` i en lista med person\
          \ poster som i sin tur matchar `placement.child` i en lista filtrerad utifrå\
          n `placement.startDate`.\n- _groupMembership_ - poster matchande `group.groupMemberships.person`\
          \ eller `group.assignmentRole.duty.person` i en lista filtrerad utifrån\
          \ `group.groupMemberships.startDate` eller `group.assignmentRole.startDate`.\n"
        in: query
        name: relationship.startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet av personer till de som har relationer med\
          \ endDate innan eller på det angivna datumet (RFC 3339-format, t.ex. \"\
          2016-10-15\"). \nPoster med ett endDate som ej är satt, tas alltid med.\n\
          För att begränsa till en viss relationtyp används parametern `relationship.entity.type`.\n\
          \nFöljande fält/relationer används vid filtreringen:\n- _enrolment_ - poster\
          \ matchandes `person.enrolment.endDate`\n- _duty_ - person poster matchandes\
          \ `duty.person` i en lista filtrerad utifrån `duty.endDate`.\n- _placement.child_\
          \ - person poster matchandes `placement.child` i en lista filtrerad utifrå\
          n `placement.endDate`.\n- _placement.owner_ - person poster matchandes `placement.owner`\
          \ i en lista filtrerad utifrån `placement.endDate`.\n- _responsibleFor.enrolment_\
          \ - person poster matchandes `person.responsibles` i en lista filtrerad\
          \ utifrån `person.enrolment.endDate`.\n- _responsibleFor.placement_ - person\
          \ poster matchandes `person.responsibles` i en lista med person poster som\
          \ i sin tur matchar `placement.child` i en lista filtrerad utifrån `placement.endDate`.\n\
          - _groupMembership_ - poster matchande `group.groupMemberships.person` eller\
          \ `group.assignmentRole.duty.person` i en lista filtrerad utifrån `group.groupMemberships.endDate`\
          \ eller `group.assignmentRole.endDate`.\n"
        in: query
        name: relationship.endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet av personer till de som har relationer med\
          \ endDate efter eller på det angivna datumet (RFC 3339-format,t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\nFör att begrä\
          nsa till en viss relationtyp används parametern `relationship.entity.type`.\n\
          \nFlöjande fält/relationer används vid filtreringen:\n - _enrolment_ - poster\
          \ matchandes `person.enrolment.endDate`\n - _duty_ - person poster matchandes\
          \ `duty.person` i en lista filtrerad utifrån `duty.endDate`.\n - _placement.child_\
          \ - person poster matchandes `placement.child` i en lista filtrerad utifrå\
          n `placement.endDate`.\n - _placement.owner_ - person poster matchandes\
          \ `placement.owner` i en lista filtrerad utifrån `placement.endDate`.\n\
          \ - _responsibleFor.enrolment_ - person poster matchandes `person.responsibles`\
          \ i en lista filtrerad utifrån `person.enrolment.endDate`.\n - _responsibleFor.placement_\
          \ - person poster matchandes `person.responsibles` i en lista med person\
          \ poster som i sin tur matchar `placement.child` i en lista filtrerad utifrå\
          n `placement.endDate`.\n - _groupMembership_ - poster matchande `group.groupMemberships.person`\
          \ eller `group.assignmentRole.duty.person` i en lista filtrerad utifrån\
          \ `group.groupMemberships.endDate` eller `group.assignmentRole.endDate`.\n\
          \nDetta kan kombineras med _relationship.startDate.onOrBefore_ för att begrä\
          nsa till aktiva relationer.\n"
        in: query
        name: relationship.endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - duties
            - responsibleFor
            - placements
            - ownedPlacements
            - groupMemberships
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - DisplayNameAsc
          - GivenNameDesc
          - GivenNameAsc
          - FamilyNameDesc
          - FamilyNameAsc
          - CivicNoAsc
          - CivicNoDesc
          - ModifiedDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonsExpanded'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
      - Person
  /persons/lookup:
    post:
      description: |
        Istället för att hämta personer en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många personer på en gång genom att skicka ett anrop med en lista med önskade personer.
      parameters:
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - duties
            - responsibleFor
            - placements
            - ownedPlacements
            - groupMemberships
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_persons_lookup_post_request'
        description: |
          En lista med personnummer och / eller uuid:n på personer.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonsExpandedArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många personer baserat på en lista av ID:n eller personnummer.
      tags:
      - Person
  /persons/{id}:
    get:
      parameters:
      - description: ID för personen som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - duties
            - responsibleFor
            - placements
            - ownedPlacements
            - groupMemberships
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonExpanded'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Get person by person id
      tags:
      - Person
  /placements:
    get:
      parameters:
      - description: |
          Begränsa urvalet till de barn som har en placering (placedAt) på angivet organisationselement.  Detta kan kombineras med startDate.onOrBefore och endDate.onOrAfter för att begränsa till aktiva placeringar.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: |
          Begränsa urvalet till de barn som har en placering på angiven grupp. Detta kan kombineras med startDate.onOrBefore och endDate.onOrAfter för att begränsa till aktiva placeringar.
        in: query
        name: group
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet till placeringar som har ett startDate värde\
          \ innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till placeringar som har ett startDate värde\
          \ på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till placeringar som har ett endDate värde\
          \ innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till placeringar som har ett endDate värde\
          \ på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: |
          Begränsa urvalet till ett barn. Detta kan kombineras med startDate.onOrBefore och endDate.onOrAfter för att begränsa till aktiva placeringar.
        in: query
        name: child
        schema:
          format: uuid
          type: string
      - description: |
          Begränsa urvalet till placeringar med denna ägare. Detta kan kombineras med startDate.onOrAfter och endDate.onOrBefore för att begränsa till aktiva placeringar.
        in: query
        name: owner
        schema:
          format: uuid
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - child
            - owners
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - StartDateAsc
          - StartDateDesc
          - EndDateAsc
          - EndDateDesc
          - ModifiedDesc
          type: string
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Placements'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med placeringar.
      tags:
      - Person
  /placements/lookup:
    post:
      description: |
        Istället för att hämta placeringar en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många placeringar på en gång genom att skicka ett anrop med en lista med önskade placeringar.
      parameters:
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - child
            - owners
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_placements_lookup_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementsArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: |
        Hämta många placeringar baserat på en lista av ID:n eller av Id från personer.
      tags:
      - Person
  /placements/{id}:
    get:
      parameters:
      - description: ID för placering som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - child
            - owners
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementExpanded'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Placering baserat på id
      tags:
      - Person
  /duties:
    get:
      parameters:
      - description: |
          Begränsa urvalet till de tjänstgöringar som är kopplade till ett organisationselement eller underliggande element.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: Begränsta urvalet till de tjänstgöringar som matchar roll
        in: query
        name: dutyRole
        schema:
          $ref: '#/components/schemas/DutyRole'
      - description: |
          Begränsa urvalet till de tjänstgöringar som är kopplade till person ID
        in: query
        name: person
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet till tjänstgöringar som har ett startDate vä\
          rde innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till tjänstgöringar som har ett startDate vä\
          rde på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till tjänstgöringar som har ett endDate vä\
          rde innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till tjänstgöringar som har ett endDate vä\
          rde på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - person
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - StartDateDesc
          - StartDateAsc
          - ModifiedDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Duties'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med tjänstgöringar.
      tags:
      - Person
  /duties/lookup:
    post:
      description: |
        Istället för att hämta tjänstgöringar en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många tjänstgöringar på en gång genom att skicka ett anrop med en lista med önskade tjänstgöringar.
      parameters:
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - person
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DutiesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många tjänstgöringar baserat på en lista av ID:n.
      tags:
      - Person
  /duties/{id}:
    get:
      parameters:
      - description: ID för tjänstgöringen som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - person
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DutyExpanded'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta tjänstgöring baserat på tjänstgörings ID
      tags:
      - Person
  /groups:
    get:
      parameters:
      - description: |
          Begränsa urvalet till grupper av en eller flera type.
        in: query
        name: groupType
        schema:
          items:
            $ref: '#/components/schemas/GroupTypesEnum'
          type: array
      - description: |
          Begränsa urvalet av grupper till de som är har en av de angivna skolformerna.
        in: query
        name: schoolTypes
        schema:
          items:
            $ref: '#/components/schemas/SchoolTypesEnum'
          type: array
      - description: |
          Begränsa urvalet till de grupper som direkt kopplade till angivna organisationselement.
        in: query
        name: organisation
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: "Begränsa urvalet till grupper som har ett startDate värde innan\
          \ eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\").\n"
        in: query
        name: startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till grupper som har ett startDate värde på\
          \ eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till grupper som har ett endDate värde innan\
          \ eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\").\
          \ \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till grupper som har ett endDate värde på eller\
          \ efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"). \n\
          Poster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - assignmentRoles
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - DisplayNameAsc
          - StartDateAsc
          - StartDateDesc
          - EndDateAsc
          - EndDateDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsExpanded'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med grupper.
      tags:
      - Grupper
  /groups/lookup:
    post:
      description: |
        Istället för att hämta grupper en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många grupper på en gång genom att skicka ett anrop med en lista med önskade grupper.
      parameters:
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - assignmentRoles
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsExpandedArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många grupper baserat på en lista av ID:n.
      tags:
      - Grupper
  /groups/{id}:
    get:
      parameters:
      - description: ID för grupp som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - assignmentRoles
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupExpanded'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta grupper baserat på ID
      tags:
      - Grupper
  /programmes:
    get:
      parameters:
      - description: Begränsa urvalet till de program som matchar skolformen.
        in: query
        name: schoolType
        schema:
          items:
            $ref: '#/components/schemas/SchoolTypesEnum'
          type: array
      - description: Begränsta urvalet till de program som matchar programkod
        in: query
        name: code
        schema:
          type: string
      - description: |
          Begränsta urvalet till de program som matchar angivet parentProgramme.
        in: query
        name: parentProgramme
        schema:
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - NameAsc
          - CodeAsc
          - ModifiedDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programmes'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista av program.
      tags:
      - Studieinformation
  /programmes/lookup:
    post:
      description: |
        Istället för att hämta program en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många program på en gång genom att skicka ett anrop med en lista med önskade program.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgrammesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många program baserat på en lista av ID:n.
      tags:
      - Studieinformation
  /programmes/{id}:
    get:
      parameters:
      - description: ID för program som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programme'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta program baserat på  ID
      tags:
      - Studieinformation
  /studyplans:
    get:
      parameters:
      - description: Begränsa urvalet till utpekade elever.
        in: query
        name: student
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: "Begränsa urvalet till studieplaner som har ett startDate vä\
          rde innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med. \n"
        in: query
        name: startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till studieplaner som har ett startDate vä\
          rde på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med. \n"
        in: query
        name: startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till studieplaner som har ett endDate värde\
          \ innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med. \n"
        in: query
        name: endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till studieplaner som har ett endDate värde\
          \ på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med. \n"
        in: query
        name: endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - StartDateAsc
          - StartDateDesc
          - EndDateAsc
          - EndDateDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyPlans'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med studieplaner.
      tags:
      - Studieinformation
  /studyplans/{id}:
    get:
      parameters:
      - description: ID för studieplan som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyPlan'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta studieplan baserat på ID
      tags:
      - Studieinformation
  /syllabuses:
    get:
      parameters:
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - SubjectNameAsc
          - SubjectNameDesc
          - SubjectCodeAsc
          - SubjectCodeDesc
          - CourseNameAsc
          - CourseNameDesc
          - CourseCodeAsc
          - CourseCodeDesc
          - SubjectDesignationAsc
          - SubjectDesignationDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabuses'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med syllabuses.
      tags:
      - Studieinformation
  /syllabuses/lookup:
    post:
      description: |
        Istället för att hämta syllabuses en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många syllabuses på en gång genom att skicka ett anrop med en lista med önskade syllabuses.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många syllabuses baserat på en lista av ID:n.
      tags:
      - Studieinformation
  /syllabuses/{id}:
    get:
      parameters:
      - description: ID för syllabus som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta syllabus baserat på ID
      tags:
      - Studieinformation
  /schoolUnitOfferings:
    get:
      parameters:
      - description: Begränsa urvalet till ett visst organisationslement (offeredAt).
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - StartDateAsc
          - StartDateDesc
          - EndDateAsc
          - EndDateDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolUnitOfferings'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med skolenheters erbjudanden.
      tags:
      - Studieinformation
  /schoolUnitOfferings/lookup:
    post:
      description: |
        Istället för att hämta program en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många program på en gång genom att skicka ett anrop med en lista med önskade program.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolUnitOfferingsArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många program baserat på en lista av ID:n.
      tags:
      - Studieinformation
  /schoolUnitOfferings/{id}:
    get:
      parameters:
      - description: ID för resursen som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolUnitOffering'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en resurs baserat på ID
      tags:
      - Studieinformation
  /activities:
    get:
      parameters:
      - description: "Begränsa urvalet till aktiviteter vars grupper `groups` inkluderar\
          \ denna person. Tidsbegräninsgar (`startDate`, `endDate`) appliceras inte\
          \ för detta filter."
        in: query
        name: member
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet till aktiviteter vars lärare `teachers` inkluderar\
          \ detta id i attributet `duty.id`. Tidsbegräninsgar (`startDate`, `endDate`)\
          \ appliceras inte för detta filter."
        in: query
        name: teacher
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till utpekat organisationselement och dess underliggande
          element.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till utpekad grupp.
        in: query
        name: group
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet till aktiviteter som har ett startDate värde\
          \ innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till aktiviteter som har ett startDate värde\
          \ på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till aktiviteter som har ett endDate värde\
          \ innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till aktiviteter som har ett endDate värde\
          \ på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - groups
            - teachers
            - syllabus
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - DisplayNameAsc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med aktiviteter baserat på ett antal sökparametrar.
      tags:
      - Aktiviteter
  /activities/lookup:
    post:
      description: |
        Istället för att hämta aktiviteter en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många aktiviteter på en gång genom att skicka ett anrop med en lista med önskade aktiviteter.
      parameters:
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - groups
            - teachers
            - syllabus
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_activities_lookup_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med aktiviteter baserat på motsvarande lista av ID:n.
      tags:
      - Aktiviteter
  /activities/{id}:
    get:
      parameters:
      - description: ID för aktivitet som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Beskriver om expanderade data ska hämtas
        in: query
        name: expand
        schema:
          items:
            enum:
            - groups
            - teachers
            - syllabus
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityExpanded'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en aktivitet baserat på dess ID
      tags:
      - Aktiviteter
  /calendarEvents:
    get:
      parameters:
      - description: "Hämta kalenderhändelser från och med denna tidpunkt (RFC 3339\
          \ format, t.ex. \"2016-10-15T09:00:00+02:00\").\n"
        in: query
        name: startTime.onOrAfter
        required: true
        schema:
          format: date-time
          type: string
      - description: "Hämta kalenderhändelser till och med denna tidpunkt (RFC 3339\
          \ format, t.ex. \"2016-10-15T09:00:00+02:00\").\n"
        in: query
        name: startTime.onOrBefore
        required: true
        schema:
          format: date-time
          type: string
      - description: "Hämta kalenderhändelser till och med denna tidpunkt (RFC 3339\
          \ format, t.ex. \"2016-10-15T11:00:00+02:00\").\n"
        in: query
        name: endTime.onOrBefore
        schema:
          format: date-time
          type: string
      - description: "Hämta kalenderhändelser från och med denna tidpunkt (RFC 3339\
          \ format, t.ex. \"2016-10-15T11:00:00+02:00\").\n"
        in: query
        name: endTime.onOrAfter
        schema:
          format: date-time
          type: string
      - description: Begränsa urvalet till utpekad aktivitet.
        in: query
        name: activity
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet till kalenderhändelser vars aktivitet `activity.group`\
          \ => `group.groupMemberships.person.id` eller `studentExceptions.student.id`\
          \ inkluderar denna person. Tidsbegräninsgar (`startDate`, `endDate`) appliceras\
          \ inte för detta filter."
        in: query
        name: student
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet till kalenderhändelser vars aktiviteter `activity.teachers.duty.id`\
          \ samt `teacherExceptions.duty.id` inkluderar denna tjänst `duty.id`. Tidsbegrä\
          ninsgar (`startDate`, `endDate`) appliceras inte för detta filter."
        in: query
        name: teacher
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till utpekat organisationselement och dess underliggande
          element.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till utpekad grupp relaterat genom kopplade
          aktiviteter.
        in: query
        name: group
        schema:
          format: uuid
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Beskriver om expanderade data ska hämtas för aktiviteten.
        in: query
        name: expand
        schema:
          items:
            enum:
            - activity
            - attendance
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - StartTimeAsc
          - StartTimeDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEvents'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Returnerar kalenderhändelser utifrån en aktivitet eller student.
      tags:
      - Kalenderhändelser
  /calendarEvents/{id}:
    get:
      parameters:
      - description: Hämta en kalenderhändelse.
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Beskriver om expanderade data ska hämtas för aktiviteten.
        in: query
        name: expand
        schema:
          items:
            enum:
            - activity
            - attendance
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEvent'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Returnerar en kalenderhändelse utifrån ID
      tags:
      - Kalenderhändelser
  /calendarEvents/lookup:
    post:
      description: |
        Istället för att hämta kalenderhändelser en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många kalenderhändelser på en gång genom att skicka ett anrop med en lista med önskade kalenderhändelser.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_calendarEvents_lookup_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendancesArray'
          description: Anropet lyckades.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: |
        Hämta kalenderhändelser baserat på en lista av ID:n eller av Id från aktiviteter eller av Id från personer.
      tags:
      - Kalenderhändelser
  /attendances:
    get:
      parameters:
      - description: Begränsa urvalet till utpekad person.
        in: query
        name: student
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till utpekat organisationselement och dess underliggande
          element.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till utpekad kalenderpost.
        in: query
        name: calendarEvent
        schema:
          format: uuid
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendances'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Returnerar registrerad närvaro utifrån en aktivitet eller student.
      tags:
      - Närvaro
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendance'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: Post skapad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Registrera en ny närvaro post.
      tags:
      - Närvaro
  /attendances/lookup:
    post:
      description: |
        Istället för att hämta aktiviteter en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många aktiviteter på en gång genom att skicka ett anrop med en lista med önskade aktiviteter.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_attendances_lookup_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendancesArray'
          description: Anropet lyckades.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: |
        Hämta närvaro baserat på en lista av ID:n eller av Id från aktiviteter eller av Id från elever.
      tags:
      - Närvaro
  /attendances/{id}:
    delete:
      parameters:
      - description: ID för närvaro posten som ska tas bort.
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: Post borttagen.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Ta bort en närvaro post.
      tags:
      - Närvaro
    get:
      parameters:
      - description: Hämta en Attendance post.
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en närvaro post utifrån ID.
      tags:
      - Närvaro
  /attendanceEvents:
    get:
      parameters:
      - description: Begränsa urvalet till utpekade gruppers ID.
        in: query
        name: group
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: Begränsa urvalet till utpekad person.
        in: query
        name: person
        schema:
          format: uuid
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Beskriver om expanderade data ska hämtas för aktiviteten.
        in: query
        name: expand
        schema:
          items:
            enum:
            - person
            - group
            - registeredBy
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceEvents'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Returnerar registrerade in-/utcheckningar.
      tags:
      - Närvarohändelser
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceEvent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceEvent'
          description: Post skapad.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Registrera en ny närvarohändelse (in-/utcheckning).
      tags:
      - Närvarohändelser
  /attendanceEvents/{id}:
    delete:
      parameters:
      - description: ID för närvaro posten som ska tas bort.
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: Post borttagen.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Ta bort en närvarohändelse.
      tags:
      - Närvarohändelser
    get:
      parameters:
      - description: Hämta en närvarohändelse.
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Beskriver om expanderade data ska hämtas för aktiviteten.
        in: query
        name: expand
        schema:
          items:
            enum:
            - person
            - group
            - registeredBy
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceEvent'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en närvarohändelse utifrån ID.
      tags:
      - Närvarohändelser
  /attendanceEvents/lookup:
    post:
      description: |
        Istället för att hämta närvarohändelse en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många närvarohändelser på en gång genom att skicka ett anrop med en lista med önskade närvarohändelser.
      parameters:
      - description: Beskriver om expanderade data ska hämtas för aktiviteten.
        in: query
        name: expand
        schema:
          items:
            enum:
            - person
            - group
            - registeredBy
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_attendanceEvents_lookup_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttendanceEvent'
                type: array
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med närvarohändelser baserat på motsvarande lista av
        ID:n.
      tags:
      - Närvarohändelser
  /attendanceSchedule:
    get:
      parameters:
      - description: Begränsa urvalet till scheman för utpekad placering.
        in: query
        name: placement
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till scheman vars placeringar är kopplad till
          utpekad grupp.
        in: query
        name: group
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet till vistelseschema som har ett startDate vä\
          rde innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till vistelseschema som har ett startDate vä\
          rde på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ).\n"
        in: query
        name: startDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till vistelseschema som har ett endDate vä\
          rde innan eller på det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet till vistelseschema som har ett endDate vä\
          rde på eller efter det angivna datumet (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). \nPoster med ett endDate som ej är satt, tas alltid med.\n"
        in: query
        name: endDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSchedules'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Returnerar registrerade vistelsescheman.
      tags:
      - Vistelseschema
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceSchedule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSchedule'
          description: Post skapad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Registrera ett nytt vistelseschema.
      tags:
      - Vistelseschema
  /attendanceSchedule/{id}:
    delete:
      parameters:
      - description: ID för vistelseschema som ska tas bort.
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: Post borttagen.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Ta bort ett vistelseschema.
      tags:
      - Vistelseschema
    get:
      parameters:
      - description: Id för vistelseschema att hämta.
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSchedule'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta ett vistelseschema utifrån ID.
      tags:
      - Vistelseschema
  /attendanceSchedule/lookup:
    post:
      description: |
        Istället för att hämta vistelsescheman ett i taget med en loop av GET-anrop så finns det även möjlighet att hämta många vistelsescheman på en gång genom att skicka ett anrop med en lista med önskade vistelsescheman.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_attendanceSchedule_lookup_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många vistelsescheman baserat på en lista av ID:n.
      tags:
      - Vistelseschema
  /grades:
    get:
      parameters:
      - description: Begränsa urvalet till de betyg som är kopplade till skolenhet.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till de betyg som tillhör eleven
        in: query
        name: student
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till de betyg som är registrerade av personen
        in: query
        name: registeredBy
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till de betyg som är utfärdade av ansvarig lärare
        in: query
        name: gradingTeacher
        schema:
          format: uuid
          type: string
      - description: "Begränsa urvalet av betyg till de som är registerade inom det\
          \ intervall som startar på angivet datum (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). Inkluderande.\n"
        in: query
        name: registeredDate.onOrAfter
        schema:
          format: date
          type: string
      - description: "Begränsa urvalet av betyg till de som är registerade inom det\
          \ intervall som slutar på angivet datum (RFC 3339-format, t.ex. \"2016-10-15\"\
          ). Inkluderande.\n"
        in: query
        name: registeredDate.onOrBefore
        schema:
          format: date
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - registeredDateAsc
          - registeredDateDesc
          - ModifiedDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grades'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med betyg.
      tags:
      - Betyg
  /grades/lookup:
    post:
      description: |
        Istället för att hämta betyg ett i taget med en loop a GET-anrop så finns det även möjlighet att hämta många betyg på en gång genom att skicka ett anrop med en lista med önskade objekt.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många betyg baserat på en lista av ID:n.
      tags:
      - Betyg
  /grades/{id}:
    get:
      parameters:
      - description: ID för betyg som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta betyg baserat på ID
      tags:
      - Betyg
  /absences:
    get:
      parameters:
      - description: |
          Begränsa urvalet till den frånvaro/ledighet som är kopplad till organisationen.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: |
          Begränsa urvalet till den frånvaro/ledighet som är kopplad till eleven
        in: query
        name: student
        schema:
          format: uuid
          type: string
      - description: |
          Begränsa urvalet till den frånvaro/ledighet som är registrerad av personen
        in: query
        name: registeredBy
        schema:
          format: uuid
          type: string
      - description: Begränsa urvalet till den frånvaro/ledighet som är av angiven
          typ
        in: query
        name: type
        schema:
          $ref: '#/components/schemas/AbsenceEnum'
      - description: "Endast anmälda frånvaro som startar innan eller på denna tidpunkt\
          \ (RFC 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: startTime.onOrBefore
        schema:
          format: date-time
          type: string
      - description: "Endast anmälda frånvaro/ledighet som startar efter denna tidpunkt\
          \ (RFC 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: startTime.onOrAfter
        schema:
          format: date-time
          type: string
      - description: "Endast anmälda frånvaro som slutar innan eller på denna tidpunkt\
          \ (RFC 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: endTime.onOrBefore
        schema:
          format: date-time
          type: string
      - description: "Endast anmälda frånvaro/ledighet som slutar efter denna tidpunkt\
          \ (RFC 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: endTime.onOrAfter
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: Anger hur resultatet ska sorteras.
        in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - StartTimeAsc
          - StartTimeDesc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Absences'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: |
        Hämta en lista av beviljad ledighet och anmäld frånvaro.
      tags:
      - Närvaro
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Absence'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Absence'
          description: Post skapad.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Registrera en ny anmäld frånvaropost eller beviljad ledighet
      tags:
      - Närvaro
  /absences/lookup:
    post:
      description: |
        Istället för att hämta anmälda frånvaro en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många anmälda frånvaroposter på en gång genom att skicka ett anrop med en lista med önskade objekt.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbsencesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många anmälda frånvaroposter baserat på en lista av ID:n.
      tags:
      - Närvaro
  /absences/{id}:
    get:
      parameters:
      - description: ID för anmäld frånvaro som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Absence'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta anmäld frånvaro baserat på ID
      tags:
      - Närvaro
  /aggregatedAttendance:
    get:
      parameters:
      - description: "Hämta aggregerad närvaro från och med detta datum (RFC 3339-format,\
          \ e.g. \"2016-10-15\")\n"
        in: query
        name: startDate
        required: true
        schema:
          format: date
          type: string
      - description: "Hämta aggregerad närvaro till och med detta datum (RFC 3339-format,\
          \ e.g. \"2016-10-15\")\n"
        in: query
        name: endDate
        required: true
        schema:
          format: date
          type: string
      - description: |
          Inkludera endast närvaro från aktiviteter vilka ägs av angivet organisationselement.
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: |
          Hämta endast närvaro information från aktiviteter vilka är kopplade mot angiven skolform.
        in: query
        name: schoolType
        schema:
          items:
            $ref: '#/components/schemas/SchoolTypesEnum'
          type: array
      - description: Filtrera på elev (person).
        in: query
        name: student
        schema:
          items:
            format: uuid
            type: string
          type: array
      - description: |
          Beskriver om och vilken expanderade data som returneras i samband med närvaroinformationen.
        in: query
        name: expand
        schema:
          items:
            enum:
            - activity
            - student
            type: string
          type: array
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedAttendances'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: |
        Returnerar summerad närvaro information utifrån angivet tidsintervall.
      tags:
      - Närvaro
  /resources:
    get:
      parameters:
      - description: Begränsa urvalet till ett visst organisationselemet (owner).
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - DisplayNameAsc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med resurser.
      tags:
      - Rum och resurser
  /resources/lookup:
    post:
      description: |
        Istället för att hämta resurser en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många resurser på en gång genom att skicka ett anrop med en lista med önskade resurser.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många resurser baserat på en lista av ID:n.
      tags:
      - Rum och resurser
  /resources/{id}:
    get:
      parameters:
      - description: ID för resursen som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en resurs baserat på ID
      tags:
      - Rum och resurser
  /rooms:
    get:
      parameters:
      - description: Begränsa urvalet till ett visst organisationselemet (owner).
        in: query
        name: organisation
        schema:
          format: uuid
          type: string
      - description: "Endast poster skapade på eller före detta timestamp (RFC 3339\
          \ format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.created.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster skapade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.created.after
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade på eller före detta timestamp (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\"). Inkluderande.\n"
        in: query
        name: meta.modified.before
        schema:
          format: date-time
          type: string
      - description: "Endast poster modifierade efter detta timestamp (RFC 3339 format,\
          \ tex \"2015-12-12T10:30:00+01:00\"). Exkluderande.\n"
        in: query
        name: meta.modified.after
        schema:
          format: date-time
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      - in: query
        name: sortkey
        schema:
          enum:
          - ModifiedDesc
          - DisplayNameAsc
          type: string
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rooms'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista med salar.
      tags:
      - Rum och resurser
  /rooms/lookup:
    post:
      description: |
        Istället för att hämta salar en i taget med en loop av GET-anrop så finns det även möjlighet att hämta många salar på en gång genom att skicka ett anrop med en lista med önskade salar.
      parameters:
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdLookup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsArray'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Svaret är förstort för servern att hantera.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta många salar baserat på en lista av ID:n.
      tags:
      - Rum och resurser
  /rooms/{id}:
    get:
      parameters:
      - description: ID för salen som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returnera `displayName` för alla refererade objekt.
        in: query
        name: expandReferenceNames
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en sal baserat på ID
      tags:
      - Rum och resurser
  /subscriptions:
    get:
      parameters:
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
          description: Anropet lyckades.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista av prenumerationer.
      tags:
      - Prenumeration
    post:
      callbacks:
        subscriptionEvent:
          '{$request.body#/target}':
            post:
              operationId: subscriptionEvent_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/_subscriptions_get_request'
                required: true
              responses:
                "200":
                  description: Kod som returneras när anropet accepteras.
              x-callback-request: true
      requestBody:
        content:
          application/json:
            example:
              name: Nya
              target: https://pastebin/788
              resourceTypes:
              - Organsation
              - Person
              - Duty
            schema:
              $ref: '#/components/schemas/CreateSubscription'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Prenumeration skapad.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Skapa en prenumeration
      tags:
      - Prenumeration
  /subscriptions/{id}:
    delete:
      parameters:
      - description: ID för prenumerationen som ska tas bort
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: Prenumeration borttagen.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Ta bort en prenumeration
      tags:
      - Prenumeration
    get:
      parameters:
      - description: ID för prenumerationen som ska hämtas
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta prenumeration baserat på ID
      tags:
      - Prenumeration
    patch:
      parameters:
      - description: ID för prenumerationen som ska uppdateras
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Felaktigt id.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        "404":
          description: Posten hittades inte.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Uppdatera expire time på prenumerationen baserat på ID
      tags:
      - Prenumeration
  /log/:
    post:
      requestBody:
        content:
          application/json:
            example:
              message: courseCode "MAT101" kan inte mappas mot någon känd kurs.
              messageType: ValueMapping
              resourceType: Syllabus
              resourceId: 5e10f18c-6d0d-450b-a4b8-fa99e1053f78
              resourceUrl: https://service.example.se/ss12000/activities?organisation=1bf329c9-2f42-4c60-8e39-01cdbcc1704f&expand=syllabus
              severityLevel: Warning
            schema:
              $ref: '#/components/schemas/LogEntry'
        required: true
      responses:
        "201":
          description: Loggpost skapad.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Logga en händelse
      tags:
      - Loggning
  /statistics/:
    post:
      requestBody:
        content:
          application/json:
            example:
              resourceType: Activity
              resourceUrl: https://service.example.se/ss12000/activities?organisation=1bf329c9-2f42-4c60-8e39-01cdbcc1704f
              newCount: 2
              updatedCount: 234
              deletedCount: 0
              timeOfOccurance: 2020-04-08T12:51:31.322Z
            schema:
              $ref: '#/components/schemas/StatisticsEntry'
        required: true
      responses:
        "201":
          description: Statistikpost skapad.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Logga statistik relaterat till överförda objekt
      tags:
      - Loggning
  /deletedEntities:
    get:
      parameters:
      - description: "Hämta borttag som inträffat efter specificerad tidpunkt (RFC\
          \ 3339 format, tex \"2015-12-12T10:30:00+01:00\").\n"
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: En lista med de entitetstyper vars borttag ska hämtas
        in: query
        name: entities
        schema:
          items:
            $ref: '#/components/schemas/EndPointsEnum'
          type: array
      - description: "Antal poster som ska visas i resultatet. Utelämnas det så returnas\
          \ så många poster som möjligt av servern, se `pageToken`.\n"
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
      - description: |
          Ett opakt värde som servern givit som svar på en tidigare ställd fråga. Kan inte komibineras med andra filter men väl med `limit`.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedEntities'
          description: Anropet lyckades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
            \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras\
            \ med `pageToken`."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Åtkomst nekad.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Okänt fel.
      summary: Hämta en lista av entiteter som tagits bort av tjänsten.
      tags:
      - Borttag
components:
  responses:
    "204_removed":
      description: Post borttagen.
    "400_invalid_filter":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Filter (ex `sortkey`, `meta.modified.after`, `meta.modified.before`,\
        \ `meta.created.after`, `meta.created.before` etc.) kan inte kombineras med\
        \ `pageToken`."
    "400_invalid_id":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Felaktigt id.
    "403_not_authorised":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Åtkomst nekad.
    "404_not_found":
      description: Posten hittades inte.
    "503_overload":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Svaret är förstort för servern att hantera.
    default_error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Okänt fel.
  schemas:
    Organisation:
      description: En skolhuvudman eller annan slags organisatorisk enhet.
      example:
        address:
          country: country
          countyCode: 0
          streetAddress: streetAddress
          postalCode: postalCode
          locality: locality
          type: Besöksadress
          municipalityCode: 6
          realEstateDesignation: realEstateDesignation
        contactInfo:
        - infoType: Support
          info: info
        - infoType: Support
          info: info
        endDate: 2000-01-23
        displayName: displayName
        municipalityCode: municipalityCode
        url: https://openapi-generator.tech
        organisationType: null
        schoolTypes:
        - null
        - null
        phoneNumber: phoneNumber
        organisationCode: organisationCode
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        parentOrganisation: null
        organisationNumber: organisationNumber
        schoolUnitCode: schoolUnitCode
        email: email
        startDate: 2000-01-23
      properties:
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        displayName:
          description: Namn på organisationen
          type: string
        organisationCode:
          description: En kod för att identifiera organisationselementet inom organisationen.
          type: string
        organisationType:
          $ref: '#/components/schemas/OrganisationTypeEnum'
        organisationNumber:
          description: |
            Identitetsbeteckning för juridiska personer såsom kommun eller bolag
          type: string
        parentOrganisation:
          $ref: '#/components/schemas/Organisation_parentOrganisation'
        schoolUnitCode:
          description: |
            Skolenhetskod. Identifierare för skolenheten enligt Skolverket. Används för de skolformer där skolverket bestämmer en skolenhetskod för varje enhet.
          type: string
        schoolTypes:
          description: Anges endas för organisationselement typen Skolenhet.
          items:
            $ref: '#/components/schemas/SchoolTypesEnum'
          type: array
          uniqueItems: true
        address:
          $ref: '#/components/schemas/Organisation_address'
        municipalityCode:
          description: "Kommunkod. Län och kommunkod för den kommun där skolan är\
            \ belägen, exempelvis 0180 där 01 anger länet och 80 anger kommunen.\n"
          type: string
        url:
          description: |
            Länk till en websida med information om skolan eller organisationselementet.
          format: uri
          type: string
        email:
          description: |
            Epost-adress till skolan eller organisationselementet.
          format: email
          type: string
        phoneNumber:
          description: |
            Telefonnummer till en skolan eller organisationselementet.
          type: string
        contactInfo:
          items:
            $ref: '#/components/schemas/ContactInfo'
          type: array
        startDate:
          description: "Startdatum för organisationensdelens giltighetstid (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Gäller för alla underliggande element som inte\
            \ har ett mer restrektivt värde. Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för organisationensdelens giltighetstid (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Gäller för alla underliggande element som inte\
            \ har ett mer restrektivt värde. Inkluderande.\n"
          format: date
          type: string
      required:
      - displayName
      - id
      - meta
      - organisationType
      title: Organisation
      type: object
    Person:
      example:
        personStatus: Aktiv
        addresses:
        - country: country
          countyCode: 0
          streetAddress: streetAddress
          postalCode: postalCode
          locality: locality
          type: Folkbokföring
          municipalityCode: 6
          realEstateDesignation: realEstateDesignation
        - country: country
          countyCode: 0
          streetAddress: streetAddress
          postalCode: postalCode
          locality: locality
          type: Folkbokföring
          municipalityCode: 6
          realEstateDesignation: realEstateDesignation
        securityMarking: Ingen
        givenName: givenName
        sex: Man
        photo: https://openapi-generator.tech
        birthDate: 2000-01-23
        civicNo:
          nationality: SE
          value: value
        phoneNumbers:
        - mobile: true
          type: Hem
          value: value
        - mobile: true
          type: Hem
          value: value
        externalIdentifiers:
        - globallyUnique: true
          context: http://linkoping.se/AD
          value: value
        - globallyUnique: true
          context: http://linkoping.se/AD
          value: value
        emails:
        - type: Privat
          value: value
        - type: Privat
          value: value
        eduPersonPrincipalNames:
        - eduPersonPrincipalNames
        - eduPersonPrincipalNames
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        familyName: familyName
        middleName: middleName
        enrolments:
        - endDate: 2000-01-23
          schoolType: null
          schoolYear: 1
          cancelled: true
          specification: specification
          enroledAt: null
          educationCode: educationCode
          programme: null
          startDate: 2000-01-23
        - endDate: 2000-01-23
          schoolType: null
          schoolYear: 1
          cancelled: true
          specification: specification
          enroledAt: null
          educationCode: educationCode
          programme: null
          startDate: 2000-01-23
        responsibles:
        - relationType: null
          person: null
        - relationType: null
          person: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: |
            Ett objekt ska ha samma överförings-ID mellan samtliga ingående system och således är det ett enda namespace för de gemensamma ID:na. Objektidentifikatorn är den nyckel som skall vara persistent mellan olika processer (enl figur 1).
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        givenName:
          description: Förnamn.
          type: string
        middleName:
          description: Mellannamn.
          type: string
        familyName:
          description: Efternamn.
          type: string
        eduPersonPrincipalNames:
          description: "De identifierare som ska användas för att identifiera anvä\
            ndaren i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent\
            \ och globalt unik sträng. Den ska bestå av en lokalt unik användaridentifierare,\
            \ ett ’@’ och en domän. En domän är ofta, men inte nödvändigtvis,\
            \ samma som organisationens internet-domännamn. _Exempel: kalko@edu.goteborg.se_\n"
          items:
            type: string
          type: array
          uniqueItems: true
        externalIdentifiers:
          items:
            $ref: '#/components/schemas/externalIdentifier'
          type: array
        civicNo:
          $ref: '#/components/schemas/Person_civicNo'
        birthDate:
          description: "Födelsedatum (RFC 3339-format, t.ex. \"2016-10-15\")"
          format: date
          type: string
        sex:
          description: Biologiskt kön
          enum:
          - Man
          - Kvinna
          - Okänt
          title: Code_Sex
          type: string
        securityMarking:
          description: |
            Återspeglar värdet från folkbokföringsregistret.
          enum:
          - Ingen
          - Sekretessmarkering
          - Skyddad folkbokföring
          title: Code_SecurityMarking
          type: string
        personStatus:
          default: Aktiv
          description: "Anger ifall en person har en aktiv status eller en annan status,\
            \ såsom utvandrad eller avliden.\n"
          enum:
          - Aktiv
          - Utvandrad
          - Avliden
          title: Code_PersonStatus
          type: string
        emails:
          description: En lista med personens epostadresser
          items:
            $ref: '#/components/schemas/Email'
          type: array
        phoneNumbers:
          description: En lista med telefonnummer till personen.
          items:
            $ref: '#/components/schemas/Phonenumber'
          type: array
        addresses:
          description: En lista med personens postadresser
          items:
            $ref: '#/components/schemas/Person_addresses_inner'
          type: array
        photo:
          description: "Pekar ut en resurs med en bild på personen, specificeras som\
            \ en URI enligt RFC 3986.\n"
          format: uri
          type: string
        enrolments:
          description: En lista med inskrivningar för personen
          items:
            $ref: '#/components/schemas/Enrolment'
          type: array
        responsibles:
          description: |
            Personens vårdnadshavare eller motsvarande relationer så som familjehemsförälder. Denna relation beskriver ett officiellt ansvarsförhållande.
          items:
            $ref: '#/components/schemas/Person_responsibles_inner'
          type: array
      required:
      - familyName
      - givenName
      - id
      - meta
      type: object
    Duty:
      description: referens till ett Dutyobjekt
      properties:
        id:
          description: Ett ID för tjänsten.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        person:
          $ref: '#/components/schemas/Duty_person'
        assignmentRole:
          description: "Datatyp som ska användas för att beskriva arbetsuppgifter\
            \ för en person i relation till elevgrupp. Lärares undervisning ska inte\
            \ uttryckas som en arbetsuppgift, för detta syfte används i stället Aktivitet."
          items:
            $ref: '#/components/schemas/Duty_assignmentRole_inner'
          type: array
        dutyAt:
          $ref: '#/components/schemas/OrganisationReference'
        dutyRole:
          allOf:
          - $ref: '#/components/schemas/DutyRole'
          - description: "Syfte med tjänsten, den roll tjänsen avser, till exempel\
              \ lärare eller rektor.\n"
        description:
          description: "Arbetsområde. Kompletterande information till personalkategori,\
            \ exempelvis Bibliotekarie."
          type: string
        signature:
          description: "En signatur för tjänstgöringen exempelvis NJN, JOAN."
          type: string
        dutyPercent:
          description: Tjänstgöringsgrad i procent
          type: integer
        hoursPerYear:
          description: Antalet timmar tjänstgöringen omfattar under ett år.
          type: integer
        startDate:
          description: "Startdatum för personens anställning på en viss skolenhet\
            \ eller skola (RFC 3339-format, t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för personens anställning på en viss skolenhet eller\
            \ skola (RFC 3339-format, e.g. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
      required:
      - dutyAt
      - dutyRole
      - id
      - meta
      - startDate
      title: Duty
      type: object
    Placement:
      properties:
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        placedAt:
          $ref: '#/components/schemas/Placement_placedAt'
        group:
          $ref: '#/components/schemas/Placement_group'
        child:
          $ref: '#/components/schemas/Placement_child'
        owners:
          description: |
            En lista med identifierare för de personer som äger placeringen. Används primärt för att styra vilka som skall kunna se och lägga schema.
          items:
            $ref: '#/components/schemas/PersonReference'
          type: array
        schoolType:
          description: "Skolform för placeringen, förskola eller fritidshem"
          enum:
          - FS
          - FTH
          - OPPFTH
          title: Code_SchoolType
          type: string
        startDate:
          description: "Startdatum för placeringen (RFC 3339-format, t.ex. \"2016-10-15\"\
            ). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för placeringen (RFC 3339-format, t.ex. \"2016-10-15\"\
            ). Inkluderande.\n"
          format: date
          type: string
        reason:
          description: En kod för att beskriva orsak för placeringen.
          enum:
          - Omsorgsbehov
          - Erbjuden tid
          - Eget behov
          title: Code_Reason
          type: string
        maxWeeklyScheduleHours:
          description: Anger maximal schematid per vecka för barnets placering.
          type: integer
      required:
      - child
      - id
      - meta
      - placedAt
      - schoolType
      - startDate
      title: Placement
      type: object
    Group:
      allOf:
      - $ref: '#/components/schemas/GroupFragment'
      - $ref: '#/components/schemas/Group_allOf'
    Programme:
      description: Ett program av kurser.
      example:
        code: code
        parentProgramme: null
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        name: name
        schoolType: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: Yrkesprogram
        content:
        - type: Gymnasiegemensamma
          content:
          - null
          - null
          points: 0
        - type: Gymnasiegemensamma
          content:
          - null
          - null
          points: 0
      properties:
        id:
          description: Identifierare för programmet.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          description: Program-/inriktningens namn.
          type: string
        type:
          description: Typ av program.
          enum:
          - Yrkesprogram
          - Högskoleförberedande program
          - Intruduktionsprogram
          - Nationellt yrkespaket
          - Regionalt yrkespaket
          - Fjärde tekniskt år
          - Programinriktning
          - Utgång
          title: Code_ProgrammeType
          type: string
        parentProgramme:
          $ref: '#/components/schemas/Programme_parentProgramme'
        schoolType:
          $ref: '#/components/schemas/SchoolTypesEnum'
        code:
          description: |
            Program-/inriktningskod(studievägskod). För gymnasieskolans program/inriktningar måste denna finnas och vara enligt Skolverkets definition.
          type: string
        content:
          description: Kurser/ämnen som ingår i utbildningen.
          items:
            $ref: '#/components/schemas/Programme_content_inner'
          type: array
      required:
      - id
      - meta
      - name
      - schoolType
      - type
      type: object
    Syllabus:
      description: |
        Används för att referera till en specifik kurskod eller ett ämne med information om årskurs och skolform som avses med undervisningen. För officiella ämnen/kurser anges läroplan.
      example:
        courseCode: courseCode
        schoolType: null
        official: true
        curriculum: null
        languageCode: languageCode
        points: 1
        courseName: courseName
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        subjectDesignation: subjectDesignation
        endSchoolYear: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        specialisationCourseContent:
          titleEnglish: titleEnglish
          description: description
          title: title
          descriptionEnglish: descriptionEnglish
        subjectCode: subjectCode
        subjectName: subjectName
        startSchoolYear: 0
      properties:
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        schoolType:
          $ref: '#/components/schemas/SchoolTypesEnum'
        subjectCode:
          description: "En kod för ämnet som används bland annat i lärarlegitimation\
            \ och i Skolverkets kurs- och läroplaner, till exempel GRGRMAT01. Notera\
            \ att detta värde *ej* är den kortare ämndesbeteckningen, exempelvis _MA_,\
            \ utan indikerar inte bara ämne utan även vilken läroplan som avses, så\
            som i exemplet ovan Grundskolan. För ämnen som inte definieras av Skolverket\
            \ används valfri kod.\n"
          type: string
        subjectName:
          description: "Ämnets namn, exempelvis Matematik."
          type: string
        subjectDesignation:
          description: "Ämnets beteckning, exempelvis MA, MLARA."
          type: string
        courseCode:
          description: "Kurskod enligt Skolverket, om det är en officiell kurs, eller\
            \ annars efter eget val.\n"
          type: string
        courseName:
          description: "Kursens namn, exempelvis Matematik 1a."
          type: string
        startSchoolYear:
          description: Start för årskursintervall för undervisningens innehåll.
          maximum: 10
          minimum: 0
          type: integer
        endSchoolYear:
          description: Slut för årskursintervall för undervisningens innehåll.
          maximum: 10
          minimum: 0
          type: integer
        points:
          description: Antalet poäng för en specifik kurs. Exempelvis 100 poäng.
          type: integer
        curriculum:
          $ref: '#/components/schemas/CurriculumEnum'
        languageCode:
          description: Språkkod för moderna språk och modersmål. Enligt ISO 639-3.
          type: string
        specialisationCourseContent:
          $ref: '#/components/schemas/SpecialisationCourseContent'
        official:
          description: |
            Attributet anger om ämnet är ett officiellt ämne från Skolverket eller annan myndighet. Icke officiella ämnen kan skapas för andra ändamål än undervisning.
          type: boolean
      required:
      - id
      - meta
      - official
      - schoolType
      - subjectName
      title: Syllabus
      type: object
    SchoolUnitOffering:
      description: "Används för att beskriva vilka program, ämnen och kurser en skolenhet\
        \ erbjuder under ett visst tidsintervall.\n"
      example:
        offeredAt: null
        endDate: 2000-01-23
        offeredProgrammes:
        - null
        - null
        startDate: 2000-01-23
        offeredSyllabuses:
        - null
        - null
      properties:
        startDate:
          description: "Startdatum för när uppsättningen av program/kurser erbjuds\
            \ vid skolan. (RFC 3339-format, t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för när uppsättningen av program/kurser erbjuds\
            \ vid skolan. Ett angivet datum innebär att utbudet inte längre är giltigt\
            \ efter angivet datum. (RFC 3339-format, t.ex. \"2016-10-15\").\n"
          format: date
          type: string
        offeredAt:
          $ref: '#/components/schemas/SchoolUnitOffering_offeredAt'
        offeredSyllabuses:
          items:
            $ref: '#/components/schemas/SchoolUnitOffering_offeredSyllabuses_inner'
          type: array
        offeredProgrammes:
          items:
            $ref: '#/components/schemas/ProgrammeReference'
          type: array
      required:
      - offeredAt
      - offeredSyllabuses
      title: SchoolUnitOffering
      type: object
    StudyPlan:
      description: En elevs studieplan
      example:
        notes:
        - note: note
          type: Anteckningar
        - note: note
          type: Anteckningar
        student: null
        endDate: 2000-01-23
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        content:
        - syllabuses:
          - syllabus: null
            note: note
            hours: 6
            endDate: 2000-01-23
            startDate: 2000-01-23
          - syllabus: null
            note: note
            hours: 6
            endDate: 2000-01-23
            startDate: 2000-01-23
          title: title
          type: Gymnasiegemensamma
          points: 0
        - syllabuses:
          - syllabus: null
            note: note
            hours: 6
            endDate: 2000-01-23
            startDate: 2000-01-23
          - syllabus: null
            note: note
            hours: 6
            endDate: 2000-01-23
            startDate: 2000-01-23
          title: title
          type: Gymnasiegemensamma
          points: 0
        startDate: 2000-01-23
      properties:
        id:
          format: uuid
          type: string
        student:
          $ref: '#/components/schemas/StudyPlan_student'
        meta:
          $ref: '#/components/schemas/Meta'
        content:
          items:
            $ref: '#/components/schemas/StudyPlanContent'
          type: array
        notes:
          items:
            $ref: '#/components/schemas/StudyPlanNotes'
          type: array
        startDate:
          description: "Startdatum för studieplanen (RFC 3339-format, t.ex. \"2016-10-15\"\
            ). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för studieplanen  (RFC 3339-format, t.ex. \"2016-10-15\"\
            ). Inkluderande.\n"
          format: date
          type: string
      required:
      - id
      - meta
      - startDate
      - student
      title: StudyPlan
      type: object
    Activity:
      example:
        syllabus: null
        parentActivity: null
        endDate: 2000-01-23
        displayName: displayName
        groups:
        - null
        - null
        organisation: null
        calendarEventsRequired: true
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        teachers:
        - endDate: 2000-01-23
          minutesPlanned: 2
          duty: null
          grader: true
          startDate: 2000-01-23
        - endDate: 2000-01-23
          minutesPlanned: 2
          duty: null
          grader: true
          startDate: 2000-01-23
        minutesPlanned: 5
        comment: comment
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        activityType: Undervisning
        startDate: 2000-01-23
      properties:
        id:
          description: Identifierare för aktiviteten.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        displayName:
          description: "Namn på aktiviteten, i presentationssyfte."
          type: string
        calendarEventsRequired:
          description: |
            Detta ska uttrycka huruvida aktiviteten ska vara underlag för generering av lektion eller inte.
          type: boolean
        startDate:
          description: "Datum för när aktiviteten startar (RFC 3339-format, t.ex.\
            \ \"2016-10-15\").\n"
          format: date
          type: string
        endDate:
          description: "Datum för när aktiviteten slutar (RFC 3339-format, t.ex. \"\
            2016-10-15\").\n"
          format: date
          type: string
        activityType:
          description: "Beskriver vilken typ av aktivitet som avses.\n* _Undervisning_\
            \ - Schemalagd tid med koppling till timplan, som ska närvarorapporteras.\n\
            * _Elevaktivitet_ - Schemalagd tid för elever som inte är undervisning\
            \ enligt timplan, och som ska närvarorapporteras, exempelvis mentorstid,\
            \ klassråd eller friluftsdag\n* _Provaktivitet_ - En aktivitet som är\
            \ avsedd för att definiera ett eller flera provtillfällen\n* _Läraraktivitet_\
            \ - Tid för lärare som inte är undervisning och som ingår i lärarens arbetstid,\
            \ kan vara schemalagd, men ska inte närvarorapporteras, exempelvis konferenstid.\n\
            * _Övrigt_ - Läxhjälp, lunch, bokning och annat som finns på schemat,\
            \ men inte är undervisning och inte ska närvarorapporteras\n"
          enum:
          - Undervisning
          - Elevaktivitet
          - Provaktivitet
          - Läraraktivitet
          - Övrigt
          title: Code_ActivityType
          type: string
        comment:
          description: En text med kompletterande information.
          type: string
        minutesPlanned:
          description: Den totalt planerade tiden i minuter.
          type: integer
        groups:
          description: De grupper som är kopplade till aktiviteten.
          items:
            $ref: '#/components/schemas/GroupReference'
          minItems: 1
          type: array
        teachers:
          description: De lärare (Duty-objekt) som är kopplade till aktiviteten.
          items:
            $ref: '#/components/schemas/DutyAssignment'
          type: array
        syllabus:
          $ref: '#/components/schemas/Activity_syllabus'
        organisation:
          $ref: '#/components/schemas/Activity_organisation'
        parentActivity:
          $ref: '#/components/schemas/Activity_parentActivity'
      required:
      - calendarEventsRequired
      - displayName
      - groups
      - id
      - meta
      - organisation
      - startDate
      title: Activity
      type: object
    CalendarEvent:
      example:
        rooms:
        - null
        - null
        activity: null
        resources:
        - null
        - null
        studentExceptions:
        - student: null
          participates: true
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          teachingLength: 1
        - student: null
          participates: true
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          teachingLength: 1
        teachingLengthStudent: 6
        _embedded:
          activity:
            syllabus: null
            parentActivity: null
            endDate: 2000-01-23
            displayName: displayName
            groups:
            - null
            - null
            organisation: null
            calendarEventsRequired: true
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            teachers:
            - endDate: 2000-01-23
              minutesPlanned: 2
              duty: null
              grader: true
              startDate: 2000-01-23
            - endDate: 2000-01-23
              minutesPlanned: 2
              duty: null
              grader: true
              startDate: 2000-01-23
            minutesPlanned: 5
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            activityType: Undervisning
            startDate: 2000-01-23
          attendance:
          - invalidAbsenceMinutes: 3
            otherAttendanceMinutes: 2
            student: null
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            calendarEvent: null
            absenceReason: absenceReason
            reporter: null
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            reportedTimestamp: 2000-01-23T04:56:07.000+00:00
            isReported: true
            attendanceMinutes: 7
            validAbsenceMinutes: 9
          - invalidAbsenceMinutes: 3
            otherAttendanceMinutes: 2
            student: null
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            calendarEvent: null
            absenceReason: absenceReason
            reporter: null
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            reportedTimestamp: 2000-01-23T04:56:07.000+00:00
            isReported: true
            attendanceMinutes: 7
            validAbsenceMinutes: 9
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        teacherExceptions:
        - participates: true
          duty: null
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          teachingLength: 5
        - participates: true
          duty: null
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          teachingLength: 5
        cancelled: true
        startTime: 2000-01-23T04:56:07.000+00:00
        comment: comment
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endTime: 2000-01-23T04:56:07.000+00:00
        teachingLengthTeacher: 0
      properties:
        id:
          description: Identifierare för kalenderhändelsen.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        activity:
          $ref: '#/components/schemas/CalendarEvent_activity'
        startTime:
          description: |
            Kalenderhändelsens starttid med datum och tid (RFC 3339 format tex "2015-12-12T10:30:00+01:00").
          format: date-time
          type: string
        endTime:
          description: |
            Kalenderhändelsens sluttid med datum och tid (RFC 3339 format tex "2015-12-12T10:30:00+01:00").
          format: date-time
          type: string
        cancelled:
          description: |
            Inställd används för att ange att en planerad kalenderhändelse inte ska äga rum till följd av en avbokning eller annan tillfällig avvikelse. Förvalt värde är False.
          type: boolean
        teachingLengthTeacher:
          description: |
            Faktisk undervisningstid för lärare anges i minuter. Lärartiden kan vara kortare eller längre än tiden för kalenderhändelsen.
          type: integer
        teachingLengthStudent:
          description: "Faktisk undervisningstid för elever (och elever ingående i\
            \ grupper). Anges i minuter. Tiden kan vara kortare eller längre än tiden\
            \ för kalenderhändelsen, till exempel då en rast ingår i tiden.\n"
          type: integer
        comment:
          description: En text med kompletterande information.
          type: string
        studentExceptions:
          items:
            $ref: '#/components/schemas/StudentException'
          type: array
        teacherExceptions:
          items:
            $ref: '#/components/schemas/TeacherException'
          type: array
        rooms:
          items:
            $ref: '#/components/schemas/CalendarEvent_rooms_inner'
          type: array
        resources:
          items:
            $ref: '#/components/schemas/CalendarEvent_resources_inner'
          type: array
        _embedded:
          $ref: '#/components/schemas/CalendarEvent__embedded'
      required:
      - activity
      - endTime
      - id
      - meta
      - startTime
      type: object
    Attendance:
      example:
        invalidAbsenceMinutes: 3
        otherAttendanceMinutes: 2
        student: null
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        calendarEvent: null
        absenceReason: absenceReason
        reporter: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        reportedTimestamp: 2000-01-23T04:56:07.000+00:00
        isReported: true
        attendanceMinutes: 7
        validAbsenceMinutes: 9
      properties:
        id:
          description: Identifierare för närvaroposten.
          format: uuid
          readOnly: true
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        calendarEvent:
          $ref: '#/components/schemas/CalendarEventReference'
        student:
          $ref: '#/components/schemas/Attendance_student'
        reporter:
          $ref: '#/components/schemas/Attendance_reporter'
        isReported:
          description: Anger om lektionen är rapporterad.
          type: boolean
        attendanceMinutes:
          description: Längd i minuter för elevens närvaro på kalenderhändelsen.
          type: integer
        validAbsenceMinutes:
          description: |
            Längd i minuter för elevens giltiga frånvaro på kalenderhändelsen.
          type: integer
        invalidAbsenceMinutes:
          description: |
            Längd i minuter för elevens ogiltiga frånvaro på kalenderhändelsen.
          type: integer
        otherAttendanceMinutes:
          description: "Tid i  minuter för elevens deltagande i annan skolaktivitet,\
            \ såsom elevråd, i stället för deltagande på kalenderhändelsen.\n"
          type: integer
        absenceReason:
          description: Angiven anledning till frånvaro.
          type: string
        reportedTimestamp:
          description: "Tidpunkt för rapportering av kalenderhändelsen (RFC 3339 format,\
            \ tex \"2015-12-12T10:30:00+01:00\").\n"
          format: date-time
          type: string
      required:
      - calendarEvent
      - id
      - isReported
      - meta
      - student
      title: Attendance
      type: object
    AttendanceEvent:
      example:
        registeredBy: null
        _embedded:
          registeredBy:
            personStatus: Aktiv
            addresses:
            - country: country
              countyCode: 0
              streetAddress: streetAddress
              postalCode: postalCode
              locality: locality
              type: Folkbokföring
              municipalityCode: 6
              realEstateDesignation: realEstateDesignation
            - country: country
              countyCode: 0
              streetAddress: streetAddress
              postalCode: postalCode
              locality: locality
              type: Folkbokföring
              municipalityCode: 6
              realEstateDesignation: realEstateDesignation
            securityMarking: Ingen
            givenName: givenName
            sex: Man
            photo: https://openapi-generator.tech
            birthDate: 2000-01-23
            civicNo:
              nationality: SE
              value: value
            phoneNumbers:
            - mobile: true
              type: Hem
              value: value
            - mobile: true
              type: Hem
              value: value
            externalIdentifiers:
            - globallyUnique: true
              context: http://linkoping.se/AD
              value: value
            - globallyUnique: true
              context: http://linkoping.se/AD
              value: value
            emails:
            - type: Privat
              value: value
            - type: Privat
              value: value
            eduPersonPrincipalNames:
            - eduPersonPrincipalNames
            - eduPersonPrincipalNames
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            familyName: familyName
            middleName: middleName
            enrolments:
            - endDate: 2000-01-23
              schoolType: null
              schoolYear: 1
              cancelled: true
              specification: specification
              enroledAt: null
              educationCode: educationCode
              programme: null
              startDate: 2000-01-23
            - endDate: 2000-01-23
              schoolType: null
              schoolYear: 1
              cancelled: true
              specification: specification
              enroledAt: null
              educationCode: educationCode
              programme: null
              startDate: 2000-01-23
            responsibles:
            - relationType: null
              person: null
            - relationType: null
              person: null
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          person:
            personStatus: Aktiv
            addresses:
            - country: country
              countyCode: 0
              streetAddress: streetAddress
              postalCode: postalCode
              locality: locality
              type: Folkbokföring
              municipalityCode: 6
              realEstateDesignation: realEstateDesignation
            - country: country
              countyCode: 0
              streetAddress: streetAddress
              postalCode: postalCode
              locality: locality
              type: Folkbokföring
              municipalityCode: 6
              realEstateDesignation: realEstateDesignation
            securityMarking: Ingen
            givenName: givenName
            sex: Man
            photo: https://openapi-generator.tech
            birthDate: 2000-01-23
            civicNo:
              nationality: SE
              value: value
            phoneNumbers:
            - mobile: true
              type: Hem
              value: value
            - mobile: true
              type: Hem
              value: value
            externalIdentifiers:
            - globallyUnique: true
              context: http://linkoping.se/AD
              value: value
            - globallyUnique: true
              context: http://linkoping.se/AD
              value: value
            emails:
            - type: Privat
              value: value
            - type: Privat
              value: value
            eduPersonPrincipalNames:
            - eduPersonPrincipalNames
            - eduPersonPrincipalNames
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            familyName: familyName
            middleName: middleName
            enrolments:
            - endDate: 2000-01-23
              schoolType: null
              schoolYear: 1
              cancelled: true
              specification: specification
              enroledAt: null
              educationCode: educationCode
              programme: null
              startDate: 2000-01-23
            - endDate: 2000-01-23
              schoolType: null
              schoolYear: 1
              cancelled: true
              specification: specification
              enroledAt: null
              educationCode: educationCode
              programme: null
              startDate: 2000-01-23
            responsibles:
            - relationType: null
              person: null
            - relationType: null
              person: null
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group:
            groupType: null
            endDate: 2000-01-23
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            schoolType: null
            organisation: null
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            startDate: 2000-01-23
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        person: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        time: 2000-01-23T04:56:07.000+00:00
        eventType: In
        group: null
      properties:
        id:
          description: Identifierare för den anmälda närvaron.
          format: uuid
          readOnly: true
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        time:
          format: date-time
          type: string
        eventType:
          enum:
          - In
          - Ut
          title: Code_AttendanceEventType
          type: string
        person:
          $ref: '#/components/schemas/AttendanceEvent_person'
        registeredBy:
          $ref: '#/components/schemas/AttendanceEvent_registeredBy'
        group:
          $ref: '#/components/schemas/AttendanceEvent_group'
        _embedded:
          $ref: '#/components/schemas/AttendanceEvent__embedded'
      required:
      - eventType
      - group
      - id
      - meta
      - person
      - time
      title: AttendanceEvent
      type: object
    AttendanceSchedule:
      example:
        temporary: false
        scheduleEntries:
        - dayOfWeek: Måndag
          weekOffset: 6
          startTime: startTime
          endTime: 1
        - dayOfWeek: Måndag
          weekOffset: 6
          startTime: startTime
          endTime: 1
        endDate: 2000-01-23
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        placement: null
        numberOfWeeks: 0
        state:
        - registeredBy: null
          registeredAt: 2000-01-23T04:56:07.000+00:00
          comment: comment
          state: Godkänt
        - registeredBy: null
          registeredAt: 2000-01-23T04:56:07.000+00:00
          comment: comment
          state: Godkänt
        startDate: 2000-01-23
      properties:
        id:
          description: Identifierare för vistelseschemat.
          format: uuid
          readOnly: true
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        placement:
          $ref: '#/components/schemas/AttendanceSchedule_placement'
        numberOfWeeks:
          description: Hur många veckor schemat gäller för innan det "börjar om".
          type: integer
        startDate:
          description: "Anger datum då schemat startar (RFC 3339-format, t.ex. \"\
            2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Anger datum då schemat slutar (RFC 3339-format, t.ex. \"2016-10-15\"\
            ). Inkluderande.\n"
          format: date
          type: string
        temporary:
          default: false
          description: |
            Anger om detta är ett undantag som gäller i stället för normalschemat under en begränsad tid. Slutdatum måste anges.
          type: boolean
        state:
          items:
            $ref: '#/components/schemas/AttendanceScheduleState'
          type: array
        scheduleEntries:
          items:
            $ref: '#/components/schemas/AttendanceScheduleEntry'
          type: array
      required:
      - id
      - meta
      - numberOfWeeks
      - placement
      - scheduleDays
      - startDate
      - state
      title: AttendanceSchedule
      type: object
    Absence:
      description: |
        Absence ska användas för att beskriva anmäld frånvaro för en elev. Den anmälda frånvaron kan avse en av skolan beviljad ledighet eller en frånvaro av annan art som anmäls av eleven själv eller elevens vårdnadshavare.
      example:
        registeredBy: null
        student: null
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        organisation: null
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endTime: 2000-01-23T04:56:07.000+00:00
        type: null
      properties:
        id:
          description: Identifierare för den anmälda frånvaron.
          format: uuid
          readOnly: true
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        startTime:
          description: "Starttid för den anmälda frånvaron (RFC 3339 format, tex \"\
            2015-12-12T10:30:00+01:00\").\n"
          format: date-time
          type: string
        endTime:
          description: "Sluttid för den anmälda frånvaron (RFC 3339, format tex \"\
            2015-12-12T10:30:00+01:00\").\n"
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/AbsenceEnum'
        student:
          $ref: '#/components/schemas/Attendance_student'
        organisation:
          $ref: '#/components/schemas/Absence_organisation'
        registeredBy:
          $ref: '#/components/schemas/Absence_registeredBy'
      required:
      - endTime
      - id
      - meta
      - startTime
      - student
      - type
      title: Absence
      type: object
    AggregatedAttendance:
      example:
        offeredSum: 2
        attendanceSum: 0
        reportedSum: 5
        activity: null
        student: null
        endDate: 2000-01-23
        _embedded:
          activity:
            syllabus: null
            parentActivity: null
            endDate: 2000-01-23
            displayName: displayName
            groups:
            - null
            - null
            organisation: null
            calendarEventsRequired: true
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            teachers:
            - endDate: 2000-01-23
              minutesPlanned: 2
              duty: null
              grader: true
              startDate: 2000-01-23
            - endDate: 2000-01-23
              minutesPlanned: 2
              duty: null
              grader: true
              startDate: 2000-01-23
            minutesPlanned: 5
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            activityType: Undervisning
            startDate: 2000-01-23
          student:
            personStatus: Aktiv
            addresses:
            - country: country
              countyCode: 0
              streetAddress: streetAddress
              postalCode: postalCode
              locality: locality
              type: Folkbokföring
              municipalityCode: 6
              realEstateDesignation: realEstateDesignation
            - country: country
              countyCode: 0
              streetAddress: streetAddress
              postalCode: postalCode
              locality: locality
              type: Folkbokföring
              municipalityCode: 6
              realEstateDesignation: realEstateDesignation
            securityMarking: Ingen
            givenName: givenName
            sex: Man
            photo: https://openapi-generator.tech
            birthDate: 2000-01-23
            civicNo:
              nationality: SE
              value: value
            phoneNumbers:
            - mobile: true
              type: Hem
              value: value
            - mobile: true
              type: Hem
              value: value
            externalIdentifiers:
            - globallyUnique: true
              context: http://linkoping.se/AD
              value: value
            - globallyUnique: true
              context: http://linkoping.se/AD
              value: value
            emails:
            - type: Privat
              value: value
            - type: Privat
              value: value
            eduPersonPrincipalNames:
            - eduPersonPrincipalNames
            - eduPersonPrincipalNames
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              modified: 2000-01-23T04:56:07.000+00:00
            familyName: familyName
            middleName: middleName
            enrolments:
            - endDate: 2000-01-23
              schoolType: null
              schoolYear: 1
              cancelled: true
              specification: specification
              enroledAt: null
              educationCode: educationCode
              programme: null
              startDate: 2000-01-23
            - endDate: 2000-01-23
              schoolType: null
              schoolYear: 1
              cancelled: true
              specification: specification
              enroledAt: null
              educationCode: educationCode
              programme: null
              startDate: 2000-01-23
            responsibles:
            - relationType: null
              person: null
            - relationType: null
              person: null
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        validAbsenceSum: 6
        otherAttendanceSum: 5
        startDate: 2000-01-23
        invalidAbsenceSum: 1
      properties:
        activity:
          $ref: '#/components/schemas/ActivityReference'
        student:
          $ref: '#/components/schemas/AggregatedAttendance_student'
        startDate:
          description: "Startdatum för den aggregerade närvaron (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för den aggregerade närvaron (RFC 3339-format, t.ex.\
            \ \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        attendanceSum:
          description: |
            Summerad tid i minuter för elevens närvaro på kalenderhändelser.
          type: integer
        validAbsenceSum:
          description: |
            Summerad tid i minuter för elevens giltiga frånvaro på kalenderhändelser.
          type: integer
        invalidAbsenceSum:
          description: |
            Summerad tid i minuter för elevens ogiltiga frånvaro på kalenderhändelser.
          type: integer
        otherAttendanceSum:
          description: "Summerad tid i minuter för elevens deltagande i annan skolaktivitet,\
            \ såsom elevråd, i stället för deltagande på kalenderhändelser.\n"
          type: integer
        reportedSum:
          description: |
            Summerad tid i minuter för alla elevens kalenderhändelser där läraren eller annan personal har markerat lektionen som färdigrapporterad.
          type: integer
        offeredSum:
          description: |
            Summerad tid i minuter för alla kalenderhändelser där eleven har erbjudits möjlighet att närvara.
          type: integer
        _embedded:
          $ref: '#/components/schemas/AggregatedAttendance__embedded'
      required:
      - activity
      - attendanceSum
      - endDate
      - startDate
      - student
      title: AggregatedAttendance
      type: object
    Grade:
      description: Avser ett registrerat betyg för en elev i ett ämne eller en kurs.
      example:
        syllabus: null
        registeredBy: null
        registeredDate: 2000-01-23
        student: null
        year: 0
        organisation: null
        remark: remark
        gradingTeacher: null
        trial: false
        gradeValue: gradeValue
        adaptedStudyPlan: adaptedStudyPlan
        converted: false
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        correctionType: Ändring
        finalGrade: true
        semester: HT
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        diplomaProject:
          titleEnglish: titleEnglish
          description: description
          title: title
          descriptionEnglish: descriptionEnglish
        group: null
      properties:
        id:
          description: ID för betyget.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        student:
          $ref: '#/components/schemas/Attendance_student'
        organisation:
          $ref: '#/components/schemas/Grade_organisation'
        registeredBy:
          $ref: '#/components/schemas/Grade_registeredBy'
        gradingTeacher:
          $ref: '#/components/schemas/Grade_gradingTeacher'
        group:
          $ref: '#/components/schemas/Grade_group'
        registeredDate:
          description: "Det datum då betyget registrerades (RFC 3339-format, t.ex.\
            \ \"2016-10-15\")."
          format: date
          type: string
        gradeValue:
          description: Anger vilket betyg eleven har tilldelats.
          type: string
        finalGrade:
          description: |
            Anger om det registrerade betyget är ett slutbetyg för ämnet eller kursen.
          type: boolean
        trial:
          default: false
          description: Anger om betyget satts vid en prövning. Förvalt värde är "false".
          type: boolean
        adaptedStudyPlan:
          description: |
            Om en specialinriktad ämnesplan (GY) eller anpassad studiegång (GR) har använts för kursen så beskrivs här på vilket sätt studiegången anpassats.
          type: string
        remark:
          description: Andra anmärkningar för betygsraden.
          type: string
        converted:
          default: false
          description: Anger om betyget är omvandlat. Förvalt värde är "false".
          type: boolean
        correctionType:
          description: "Ändringstyp för betyget, om det är ändrat."
          enum:
          - Ändring
          - Rättelse
          title: Code_GradeCorrectionType
          type: string
        semester:
          description: Om betyget avser höst- eller vårtermin.
          enum:
          - HT
          - VT
          title: Code_Semester
          type: string
        year:
          description: "Året som betyget gäller, exempelvis 2019."
          type: integer
        syllabus:
          $ref: '#/components/schemas/SyllabusReference'
        diplomaProject:
          $ref: '#/components/schemas/Grade_diplomaProject'
      required:
      - adaptedStudyPlan
      - finalGrade
      - gradeValue
      - id
      - registeredBy
      - registeredDate
      - schoolUnit
      - student
      - syllabus
      type: object
    Resource:
      example:
        owner: null
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        displayName:
          description: Namn på resursen.
          type: string
        description:
          description: Beskrivning av resursen.
          type: string
        owner:
          $ref: '#/components/schemas/OrganisationReference'
      required:
      - displayName
      - id
      - meta
      - owner
      title: Resource
      type: object
    Room:
      description: Ett rum eller en plats som kan bokas i ett skolschema.
      example:
        owner: null
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        seats: 0
      properties:
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        displayName:
          description: Namn på rum/lokal/plats.
          type: string
        seats:
          description: Antal platser i lokalen.
          type: integer
        owner:
          $ref: '#/components/schemas/OrganisationReference'
      required:
      - displayName
      - id
      - meta
      - owner
      title: Room
      type: object
    Subscription:
      allOf:
      - $ref: '#/components/schemas/Subscription_allOf'
      - $ref: '#/components/schemas/CreateSubscription'
    Error:
      properties:
        code:
          description: "Teknisk kod för att beskriva fel, varje källa bestämmer sjä\
            lv över möjliga felkoder."
          type: string
        message:
          description: Text för att beskriva felet.
          type: string
      required:
      - code
      - message
      type: object
    OrganisationTypeEnum:
      description: |
        Typ av organisation. Notera att Stadsdel är deprekerad och kommer tas bort i nästa version. Rimlig synonym är Förvaltning.
      enum:
      - Huvudman
      - Verksamhetsområde
      - Förvaltning
      - Rektorsområde
      - Skola
      - Skolenhet
      - Varumärke
      - Bolag
      - Övrigt
      title: Code_OrganisationType
      type: string
    SchoolTypesEnum:
      description: "Följande värden används för att beskriva skolform:\n  - _FS_ -\
        \ Förskola \n  - _FKLASS_ - Förskoleklass \n  - _FTH_ - Fritidshem\n  - _OPPFTH_\
        \ - Öppen fritidsverksamhet \n  - _GR_ - Grundskola \n  - _GRS_ - Grundsä\
        rskola \n  - _TR_ - Träningsskolan\n  - _SP_ - Specialskola \n  - _SAM_ -\
        \ Sameskola \n  - _GY_ - Gymnasieskola \n  - _GYS_ - Gymnasiesärskola \n \
        \ - _VUX_ - Kommunal vuxenutbildning\n  - _VUXSFI_ - Kommunal vuxenutbildning\
        \ i svenska för invandrare\n  - _VUXGR_ - Kommunal vuxenutbildning på grundlä\
        ggande nivå\n  - _VUXGY_ - Kommunal vuxenutbildning på gymnasial nivå\n  -\
        \ _VUXSARGR_ - Kommunal vuxenutbildning som särskild utbildning på grundlä\
        ggande nivå\n  - _VUXSARTR_ - Kommunal vuxenutbildning som särskild utbildning\
        \ som motsvarar träningsskolan\n  - _VUXSARGY_ - Kommunal vuxenutbildning\
        \ som särskild utbildning på gymnasial nivå\n  - _SFI_ - Utbildning i svenska\
        \ för invandrare\n  - _SARVUX_ - Särskild utbildning för vuxna \n  - _SARVUXGR_\
        \ - Särskild utbildning för vuxna på grundläggande nivå\n  - _SARVUXGY_ -\
        \ Särskild utbildning för vuxna på gymnasial nivå\n  - _SFI_ - Kommunal vuxenutbildning\
        \ i svenska för invandrare \n  - _KU_ - Kulturskola \n  - _YH_ - Yrkeshögskola\
        \ \n  - _FHS_ - Folkhögskola \n  - _STF_ - Studieförbund \n  - _KKU_ - Konst-\
        \ och kulturutbildning \n  - _HS_ - Högskola \n  - _ABU_ - Arbetsmarknadsutbildning\
        \ \n  - _AU_ - Annan undervisning\n"
      enum:
      - FS
      - FKLASS
      - FTH
      - OPPFTH
      - GR
      - GRS
      - TR
      - SP
      - SAM
      - GY
      - GYS
      - VUX
      - VUXSFI
      - VUXGR
      - VUXGY
      - VUXSARGR
      - VUXSARTR
      - VUXSARGY
      - SFI
      - SARVUX
      - SARVUXGR
      - SARVUXGY
      - KU
      - YH
      - FHS
      - STF
      - KKU
      - HS
      - ABU
      - AU
      title: Code_SchoolType
      type: string
    Organisations:
      example:
        data:
        - address:
            country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Besöksadress
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          contactInfo:
          - infoType: Support
            info: info
          - infoType: Support
            info: info
          endDate: 2000-01-23
          displayName: displayName
          municipalityCode: municipalityCode
          url: https://openapi-generator.tech
          organisationType: null
          schoolTypes:
          - null
          - null
          phoneNumber: phoneNumber
          organisationCode: organisationCode
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentOrganisation: null
          organisationNumber: organisationNumber
          schoolUnitCode: schoolUnitCode
          email: email
          startDate: 2000-01-23
        - address:
            country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Besöksadress
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          contactInfo:
          - infoType: Support
            info: info
          - infoType: Support
            info: info
          endDate: 2000-01-23
          displayName: displayName
          municipalityCode: municipalityCode
          url: https://openapi-generator.tech
          organisationType: null
          schoolTypes:
          - null
          - null
          phoneNumber: phoneNumber
          organisationCode: organisationCode
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentOrganisation: null
          organisationNumber: organisationNumber
          schoolUnitCode: schoolUnitCode
          email: email
          startDate: 2000-01-23
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Organisation'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    OrganisationsArray:
      items:
        $ref: '#/components/schemas/Organisation'
      type: array
    PersonsExpanded:
      example:
        data:
        - null
        - null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/PersonExpanded'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    PersonExpanded:
      allOf:
      - $ref: '#/components/schemas/Person'
      - $ref: '#/components/schemas/PersonExpanded_allOf'
    PersonsExpandedArray:
      items:
        $ref: '#/components/schemas/PersonExpanded'
      type: array
    Placements:
      example:
        data:
        - null
        - null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/PlacementExpanded'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    PlacementExpanded:
      allOf:
      - $ref: '#/components/schemas/Placement'
      - $ref: '#/components/schemas/PlacementExpanded_allOf'
    PlacementsArray:
      items:
        $ref: '#/components/schemas/PlacementExpanded'
      type: array
    DutyRole:
      description: Roller för en Duty. Förskolechef och Övriga pedagogisk personal
        är deprekerade och kommer tas bort till nästa version.
      enum:
      - Rektor
      - Lärare
      - Förskollärare
      - Barnskötare
      - Bibliotekarie
      - Lärarassistent
      - Fritidspedagog
      - Annan personal
      - Studie- och yrkesvägledare
      - Förstelärare
      - Kurator
      - Skolsköterska
      - Skolläkare
      - Skolpsykolog
      - Speciallärare/specialpedagog
      - Skoladministratör
      - Övrig arbetsledning
      - Övrig pedagogisk personal
      - Förskolechef
      title: Code_DutyRole
      type: string
    Duties:
      example:
        data:
        - null
        - null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/DutyExpanded'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    DutyExpanded:
      allOf:
      - $ref: '#/components/schemas/Duty'
      - $ref: '#/components/schemas/DutyExpanded_allOf'
    IdLookup:
      example:
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
      type: object
    DutiesArray:
      items:
        $ref: '#/components/schemas/DutyExpanded'
      type: array
    GroupTypesEnum:
      description: "Grupptyp anger vad en grupp ska användas till.\nEtt värdeförrå\
        d för att indikera anger vilka grupptyper som finns.\n* _Undervisning_ - Undervisningsgruppen\
        \ är en grupp som har koppling\n  till ett ämne eller en kurs, och som ska\
        \ schemaläggas med undervisningstid\n  ihop med en lärare.\n* _Klass_ - Klassen\
        \ är en organisatorisk grupp med elever som är skolplacerade\n  på en skola\
        \ med skolform FSK, GR, GRS, SP, SAM, GY eller GYS.\n  Varje elev ska vara\
        \ placerad i endast en klass. Klassen kan schemaläggas\n  med undervisning\
        \ enligt timplan. \"Klassföreståndare\" kan beskrivas genom att\n  koppla\
        \ en _AssignmentRole_ av typen _Mentor_.\n* _Mentor_ - Grupp med elever vilka\
        \ delar samma mentor/mentorer. \n  Mentor kopplas till gruppen genom en _AssignmentRole_.\n\
        * _Provgrupp_ - Grupp med elever vilka ska genomföra ett eller flera prov.\
        \ \n* _Schema_ - Schemagrupper är grupper som utgör ett komplement till\n\
        \  grupper av typen Undervisning. Schemagrupper ska schemaläggas för att\n\
        \  åstadkomma anpassningar av schemat för enskilda elever eller grupper\n\
        \  av elever. Exempel på schemagrupper är delgrupper och grupper som\n  anvä\
        nds för stödundervisning eller läxhjälp.\n* _Avdelning_ - Avdelningen är en\
        \ grupp för placering inom skolformerna\n  förskola eller fritidshem.\n* _Personalgrupp_\
        \ - En grupp vars medlemmar utgörs av personal.\n* _Övrigt_ - Övriga grupper\
        \ är andra grupper som inte är något av ovanstående.\n"
      enum:
      - Undervisning
      - Klass
      - Mentor
      - Provgrupp
      - Schema
      - Avdelning
      - Personalgrupp
      - Övrigt
      title: Code_GroupType
      type: string
    GroupsExpanded:
      example:
        data:
        - null
        - null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/GroupExpanded'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    GroupExpanded:
      allOf:
      - $ref: '#/components/schemas/Group'
      - $ref: '#/components/schemas/GroupExpanded_allOf'
    GroupFragment:
      description: "Group kan innehålla personer eller bara vara en tom \"platshå\
        llare\" utan medlemmar, som kan populeras vid ett senare tillfälle. Notera\
        \ att gruppens koppling till ämnen/kurser och lärare görs via Aktivitet. Grupper\
        \ har olika egenskaper baserat på grupptyp. Individer kan ha olika roller\
        \ i relation till en viss grupp. Grupper har specifika egenskaper.\n"
      example:
        groupType: null
        endDate: 2000-01-23
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        schoolType: null
        organisation: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDate: 2000-01-23
      properties:
        id:
          description: Identifierare för gruppen
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        displayName:
          description: Gruppens benämning.
          type: string
        startDate:
          description: "Startdatum för gruppens giltighetstid (RFC 3339-format, t.ex.\
            \ \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för gruppens giltighetstid (RFC 3339-format, t.ex.\
            \ \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        groupType:
          $ref: '#/components/schemas/GroupTypesEnum'
        schoolType:
          $ref: '#/components/schemas/SchoolTypesEnum'
        organisation:
          $ref: '#/components/schemas/OrganisationReference'
      required:
      - displayName
      - groupType
      - id
      - meta
      - organisation
      - startDate
      title: Group
      type: object
    GroupsExpandedArray:
      items:
        $ref: '#/components/schemas/GroupExpanded'
      type: array
    Programmes:
      example:
        data:
        - code: code
          parentProgramme: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          name: name
          schoolType: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Yrkesprogram
          content:
          - type: Gymnasiegemensamma
            content:
            - null
            - null
            points: 0
          - type: Gymnasiegemensamma
            content:
            - null
            - null
            points: 0
        - code: code
          parentProgramme: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          name: name
          schoolType: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Yrkesprogram
          content:
          - type: Gymnasiegemensamma
            content:
            - null
            - null
            points: 0
          - type: Gymnasiegemensamma
            content:
            - null
            - null
            points: 0
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Programme'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    ProgrammesArray:
      items:
        $ref: '#/components/schemas/Programme'
      type: array
    StudyPlans:
      example:
        data:
        - notes:
          - note: note
            type: Anteckningar
          - note: note
            type: Anteckningar
          student: null
          endDate: 2000-01-23
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          content:
          - syllabuses:
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            title: title
            type: Gymnasiegemensamma
            points: 0
          - syllabuses:
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            title: title
            type: Gymnasiegemensamma
            points: 0
          startDate: 2000-01-23
        - notes:
          - note: note
            type: Anteckningar
          - note: note
            type: Anteckningar
          student: null
          endDate: 2000-01-23
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          content:
          - syllabuses:
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            title: title
            type: Gymnasiegemensamma
            points: 0
          - syllabuses:
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            - syllabus: null
              note: note
              hours: 6
              endDate: 2000-01-23
              startDate: 2000-01-23
            title: title
            type: Gymnasiegemensamma
            points: 0
          startDate: 2000-01-23
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/StudyPlan'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    Syllabuses:
      example:
        data:
        - courseCode: courseCode
          schoolType: null
          official: true
          curriculum: null
          languageCode: languageCode
          points: 1
          courseName: courseName
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          subjectDesignation: subjectDesignation
          endSchoolYear: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          specialisationCourseContent:
            titleEnglish: titleEnglish
            description: description
            title: title
            descriptionEnglish: descriptionEnglish
          subjectCode: subjectCode
          subjectName: subjectName
          startSchoolYear: 0
        - courseCode: courseCode
          schoolType: null
          official: true
          curriculum: null
          languageCode: languageCode
          points: 1
          courseName: courseName
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          subjectDesignation: subjectDesignation
          endSchoolYear: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          specialisationCourseContent:
            titleEnglish: titleEnglish
            description: description
            title: title
            descriptionEnglish: descriptionEnglish
          subjectCode: subjectCode
          subjectName: subjectName
          startSchoolYear: 0
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Syllabus'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    SyllabusesArray:
      items:
        $ref: '#/components/schemas/Syllabus'
      type: array
    SchoolUnitOfferings:
      example:
        data:
        - offeredAt: null
          endDate: 2000-01-23
          offeredProgrammes:
          - null
          - null
          startDate: 2000-01-23
          offeredSyllabuses:
          - null
          - null
        - offeredAt: null
          endDate: 2000-01-23
          offeredProgrammes:
          - null
          - null
          startDate: 2000-01-23
          offeredSyllabuses:
          - null
          - null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/SchoolUnitOffering'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    SchoolUnitOfferingsArray:
      items:
        $ref: '#/components/schemas/SchoolUnitOffering'
      type: array
    Activities:
      example:
        data:
        - null
        - null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/ActivityExpanded'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    ActivityExpanded:
      allOf:
      - $ref: '#/components/schemas/Activity'
      - $ref: '#/components/schemas/ActivityExpanded_allOf'
    ActivitiesArray:
      items:
        $ref: '#/components/schemas/ActivityExpanded'
      type: array
    CalendarEvents:
      example:
        data:
        - rooms:
          - null
          - null
          activity: null
          resources:
          - null
          - null
          studentExceptions:
          - student: null
            participates: true
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 1
          - student: null
            participates: true
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 1
          teachingLengthStudent: 6
          _embedded:
            activity:
              syllabus: null
              parentActivity: null
              endDate: 2000-01-23
              displayName: displayName
              groups:
              - null
              - null
              organisation: null
              calendarEventsRequired: true
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              teachers:
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              minutesPlanned: 5
              comment: comment
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              activityType: Undervisning
              startDate: 2000-01-23
            attendance:
            - invalidAbsenceMinutes: 3
              otherAttendanceMinutes: 2
              student: null
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              calendarEvent: null
              absenceReason: absenceReason
              reporter: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              reportedTimestamp: 2000-01-23T04:56:07.000+00:00
              isReported: true
              attendanceMinutes: 7
              validAbsenceMinutes: 9
            - invalidAbsenceMinutes: 3
              otherAttendanceMinutes: 2
              student: null
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              calendarEvent: null
              absenceReason: absenceReason
              reporter: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              reportedTimestamp: 2000-01-23T04:56:07.000+00:00
              isReported: true
              attendanceMinutes: 7
              validAbsenceMinutes: 9
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          teacherExceptions:
          - participates: true
            duty: null
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 5
          - participates: true
            duty: null
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 5
          cancelled: true
          startTime: 2000-01-23T04:56:07.000+00:00
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endTime: 2000-01-23T04:56:07.000+00:00
          teachingLengthTeacher: 0
        - rooms:
          - null
          - null
          activity: null
          resources:
          - null
          - null
          studentExceptions:
          - student: null
            participates: true
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 1
          - student: null
            participates: true
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 1
          teachingLengthStudent: 6
          _embedded:
            activity:
              syllabus: null
              parentActivity: null
              endDate: 2000-01-23
              displayName: displayName
              groups:
              - null
              - null
              organisation: null
              calendarEventsRequired: true
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              teachers:
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              minutesPlanned: 5
              comment: comment
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              activityType: Undervisning
              startDate: 2000-01-23
            attendance:
            - invalidAbsenceMinutes: 3
              otherAttendanceMinutes: 2
              student: null
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              calendarEvent: null
              absenceReason: absenceReason
              reporter: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              reportedTimestamp: 2000-01-23T04:56:07.000+00:00
              isReported: true
              attendanceMinutes: 7
              validAbsenceMinutes: 9
            - invalidAbsenceMinutes: 3
              otherAttendanceMinutes: 2
              student: null
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              calendarEvent: null
              absenceReason: absenceReason
              reporter: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              reportedTimestamp: 2000-01-23T04:56:07.000+00:00
              isReported: true
              attendanceMinutes: 7
              validAbsenceMinutes: 9
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          teacherExceptions:
          - participates: true
            duty: null
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 5
          - participates: true
            duty: null
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            teachingLength: 5
          cancelled: true
          startTime: 2000-01-23T04:56:07.000+00:00
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endTime: 2000-01-23T04:56:07.000+00:00
          teachingLengthTeacher: 0
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/CalendarEvent'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    AttendancesArray:
      items:
        $ref: '#/components/schemas/Attendance'
      type: array
    Attendances:
      example:
        data:
        - invalidAbsenceMinutes: 3
          otherAttendanceMinutes: 2
          student: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          calendarEvent: null
          absenceReason: absenceReason
          reporter: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          reportedTimestamp: 2000-01-23T04:56:07.000+00:00
          isReported: true
          attendanceMinutes: 7
          validAbsenceMinutes: 9
        - invalidAbsenceMinutes: 3
          otherAttendanceMinutes: 2
          student: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          calendarEvent: null
          absenceReason: absenceReason
          reporter: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          reportedTimestamp: 2000-01-23T04:56:07.000+00:00
          isReported: true
          attendanceMinutes: 7
          validAbsenceMinutes: 9
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Attendance'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    AttendanceEvents:
      example:
        data:
        - registeredBy: null
          _embedded:
            registeredBy:
              personStatus: Aktiv
              addresses:
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              securityMarking: Ingen
              givenName: givenName
              sex: Man
              photo: https://openapi-generator.tech
              birthDate: 2000-01-23
              civicNo:
                nationality: SE
                value: value
              phoneNumbers:
              - mobile: true
                type: Hem
                value: value
              - mobile: true
                type: Hem
                value: value
              externalIdentifiers:
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              emails:
              - type: Privat
                value: value
              - type: Privat
                value: value
              eduPersonPrincipalNames:
              - eduPersonPrincipalNames
              - eduPersonPrincipalNames
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              familyName: familyName
              middleName: middleName
              enrolments:
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              responsibles:
              - relationType: null
                person: null
              - relationType: null
                person: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            person:
              personStatus: Aktiv
              addresses:
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              securityMarking: Ingen
              givenName: givenName
              sex: Man
              photo: https://openapi-generator.tech
              birthDate: 2000-01-23
              civicNo:
                nationality: SE
                value: value
              phoneNumbers:
              - mobile: true
                type: Hem
                value: value
              - mobile: true
                type: Hem
                value: value
              externalIdentifiers:
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              emails:
              - type: Privat
                value: value
              - type: Privat
                value: value
              eduPersonPrincipalNames:
              - eduPersonPrincipalNames
              - eduPersonPrincipalNames
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              familyName: familyName
              middleName: middleName
              enrolments:
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              responsibles:
              - relationType: null
                person: null
              - relationType: null
                person: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            group:
              groupType: null
              endDate: 2000-01-23
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              displayName: displayName
              schoolType: null
              organisation: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              startDate: 2000-01-23
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          person: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          time: 2000-01-23T04:56:07.000+00:00
          eventType: In
          group: null
        - registeredBy: null
          _embedded:
            registeredBy:
              personStatus: Aktiv
              addresses:
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              securityMarking: Ingen
              givenName: givenName
              sex: Man
              photo: https://openapi-generator.tech
              birthDate: 2000-01-23
              civicNo:
                nationality: SE
                value: value
              phoneNumbers:
              - mobile: true
                type: Hem
                value: value
              - mobile: true
                type: Hem
                value: value
              externalIdentifiers:
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              emails:
              - type: Privat
                value: value
              - type: Privat
                value: value
              eduPersonPrincipalNames:
              - eduPersonPrincipalNames
              - eduPersonPrincipalNames
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              familyName: familyName
              middleName: middleName
              enrolments:
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              responsibles:
              - relationType: null
                person: null
              - relationType: null
                person: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            person:
              personStatus: Aktiv
              addresses:
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              securityMarking: Ingen
              givenName: givenName
              sex: Man
              photo: https://openapi-generator.tech
              birthDate: 2000-01-23
              civicNo:
                nationality: SE
                value: value
              phoneNumbers:
              - mobile: true
                type: Hem
                value: value
              - mobile: true
                type: Hem
                value: value
              externalIdentifiers:
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              emails:
              - type: Privat
                value: value
              - type: Privat
                value: value
              eduPersonPrincipalNames:
              - eduPersonPrincipalNames
              - eduPersonPrincipalNames
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              familyName: familyName
              middleName: middleName
              enrolments:
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              responsibles:
              - relationType: null
                person: null
              - relationType: null
                person: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            group:
              groupType: null
              endDate: 2000-01-23
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              displayName: displayName
              schoolType: null
              organisation: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              startDate: 2000-01-23
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          person: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          time: 2000-01-23T04:56:07.000+00:00
          eventType: In
          group: null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/AttendanceEvent'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    AttendanceSchedules:
      example:
        data:
        - temporary: false
          scheduleEntries:
          - dayOfWeek: Måndag
            weekOffset: 6
            startTime: startTime
            endTime: 1
          - dayOfWeek: Måndag
            weekOffset: 6
            startTime: startTime
            endTime: 1
          endDate: 2000-01-23
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          placement: null
          numberOfWeeks: 0
          state:
          - registeredBy: null
            registeredAt: 2000-01-23T04:56:07.000+00:00
            comment: comment
            state: Godkänt
          - registeredBy: null
            registeredAt: 2000-01-23T04:56:07.000+00:00
            comment: comment
            state: Godkänt
          startDate: 2000-01-23
        - temporary: false
          scheduleEntries:
          - dayOfWeek: Måndag
            weekOffset: 6
            startTime: startTime
            endTime: 1
          - dayOfWeek: Måndag
            weekOffset: 6
            startTime: startTime
            endTime: 1
          endDate: 2000-01-23
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          placement: null
          numberOfWeeks: 0
          state:
          - registeredBy: null
            registeredAt: 2000-01-23T04:56:07.000+00:00
            comment: comment
            state: Godkänt
          - registeredBy: null
            registeredAt: 2000-01-23T04:56:07.000+00:00
            comment: comment
            state: Godkänt
          startDate: 2000-01-23
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/AttendanceSchedule'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    Grades:
      example:
        data:
        - syllabus: null
          registeredBy: null
          registeredDate: 2000-01-23
          student: null
          year: 0
          organisation: null
          remark: remark
          gradingTeacher: null
          trial: false
          gradeValue: gradeValue
          adaptedStudyPlan: adaptedStudyPlan
          converted: false
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          correctionType: Ändring
          finalGrade: true
          semester: HT
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          diplomaProject:
            titleEnglish: titleEnglish
            description: description
            title: title
            descriptionEnglish: descriptionEnglish
          group: null
        - syllabus: null
          registeredBy: null
          registeredDate: 2000-01-23
          student: null
          year: 0
          organisation: null
          remark: remark
          gradingTeacher: null
          trial: false
          gradeValue: gradeValue
          adaptedStudyPlan: adaptedStudyPlan
          converted: false
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          correctionType: Ändring
          finalGrade: true
          semester: HT
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          diplomaProject:
            titleEnglish: titleEnglish
            description: description
            title: title
            descriptionEnglish: descriptionEnglish
          group: null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Grade'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    GradesArray:
      items:
        $ref: '#/components/schemas/Grade'
      type: array
    AbsenceEnum:
      description: Anger om frånvaron är en beviljad ledighet eller en annan typ av
        anmäld frånvaro.
      enum:
      - Beviljad ledighet
      - Anmäld frånvaro
      title: Code_AbsenceType
      type: string
    Absences:
      example:
        data:
        - registeredBy: null
          student: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          organisation: null
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endTime: 2000-01-23T04:56:07.000+00:00
          type: null
        - registeredBy: null
          student: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          organisation: null
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endTime: 2000-01-23T04:56:07.000+00:00
          type: null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Absence'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    AbsencesArray:
      items:
        $ref: '#/components/schemas/Absence'
      type: array
    AggregatedAttendances:
      example:
        data:
        - offeredSum: 2
          attendanceSum: 0
          reportedSum: 5
          activity: null
          student: null
          endDate: 2000-01-23
          _embedded:
            activity:
              syllabus: null
              parentActivity: null
              endDate: 2000-01-23
              displayName: displayName
              groups:
              - null
              - null
              organisation: null
              calendarEventsRequired: true
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              teachers:
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              minutesPlanned: 5
              comment: comment
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              activityType: Undervisning
              startDate: 2000-01-23
            student:
              personStatus: Aktiv
              addresses:
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              securityMarking: Ingen
              givenName: givenName
              sex: Man
              photo: https://openapi-generator.tech
              birthDate: 2000-01-23
              civicNo:
                nationality: SE
                value: value
              phoneNumbers:
              - mobile: true
                type: Hem
                value: value
              - mobile: true
                type: Hem
                value: value
              externalIdentifiers:
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              emails:
              - type: Privat
                value: value
              - type: Privat
                value: value
              eduPersonPrincipalNames:
              - eduPersonPrincipalNames
              - eduPersonPrincipalNames
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              familyName: familyName
              middleName: middleName
              enrolments:
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              responsibles:
              - relationType: null
                person: null
              - relationType: null
                person: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          validAbsenceSum: 6
          otherAttendanceSum: 5
          startDate: 2000-01-23
          invalidAbsenceSum: 1
        - offeredSum: 2
          attendanceSum: 0
          reportedSum: 5
          activity: null
          student: null
          endDate: 2000-01-23
          _embedded:
            activity:
              syllabus: null
              parentActivity: null
              endDate: 2000-01-23
              displayName: displayName
              groups:
              - null
              - null
              organisation: null
              calendarEventsRequired: true
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              teachers:
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              - endDate: 2000-01-23
                minutesPlanned: 2
                duty: null
                grader: true
                startDate: 2000-01-23
              minutesPlanned: 5
              comment: comment
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              activityType: Undervisning
              startDate: 2000-01-23
            student:
              personStatus: Aktiv
              addresses:
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              - country: country
                countyCode: 0
                streetAddress: streetAddress
                postalCode: postalCode
                locality: locality
                type: Folkbokföring
                municipalityCode: 6
                realEstateDesignation: realEstateDesignation
              securityMarking: Ingen
              givenName: givenName
              sex: Man
              photo: https://openapi-generator.tech
              birthDate: 2000-01-23
              civicNo:
                nationality: SE
                value: value
              phoneNumbers:
              - mobile: true
                type: Hem
                value: value
              - mobile: true
                type: Hem
                value: value
              externalIdentifiers:
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              - globallyUnique: true
                context: http://linkoping.se/AD
                value: value
              emails:
              - type: Privat
                value: value
              - type: Privat
                value: value
              eduPersonPrincipalNames:
              - eduPersonPrincipalNames
              - eduPersonPrincipalNames
              meta:
                created: 2000-01-23T04:56:07.000+00:00
                modified: 2000-01-23T04:56:07.000+00:00
              familyName: familyName
              middleName: middleName
              enrolments:
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              - endDate: 2000-01-23
                schoolType: null
                schoolYear: 1
                cancelled: true
                specification: specification
                enroledAt: null
                educationCode: educationCode
                programme: null
                startDate: 2000-01-23
              responsibles:
              - relationType: null
                person: null
              - relationType: null
                person: null
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          validAbsenceSum: 6
          otherAttendanceSum: 5
          startDate: 2000-01-23
          invalidAbsenceSum: 1
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/AggregatedAttendance'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    Resources:
      example:
        data:
        - owner: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - owner: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    ResourcesArray:
      items:
        $ref: '#/components/schemas/Resource'
      type: array
    Rooms:
      example:
        data:
        - owner: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          seats: 0
        - owner: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          seats: 0
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Room'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    RoomsArray:
      items:
        $ref: '#/components/schemas/Room'
      type: array
    Subscriptions:
      example:
        data:
        - null
        - null
        pageToken: pageToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      type: object
    CreateSubscription:
      description: |
        Skapas en prenumeration på ändringar av angivna objekt. Vid ändringar i informationsmängden hos informationsägaren ska det konsumerande systemet notifieras via den URL som anges i `target`. Det konsumerande systemet gör därefter anrop för att inhämta ändrad eller borttagen information. Informationsägaren ska skicka en notis för varje registrerad prenumeration så fort en förändring identifieras. Informationsägaren kan välja att skicka en notis för multipla förändringar.
      example:
        resourceTypes:
        - resource: null
        - resource: null
        name: name
        target: target
      properties:
        name:
          description: Ett beskrivande namn på webhook:en.
          type: string
        target:
          description: |
            URL:en som webhook:en ska posta till.
          type: string
        resourceTypes:
          items:
            $ref: '#/components/schemas/CreateSubscription_resourceTypes_inner'
          type: array
      required:
      - name
      - resourceTypes
      - target
      title: Subscription
      type: object
    EndPointsEnum:
      enum:
      - Absence
      - AttendanceEvent
      - Attendance
      - Grade
      - CalendarEvent
      - AttendanceSchedule
      - Resource
      - Room
      - Activity
      - Duty
      - Placement
      - StudyPlan
      - Programme
      - Syllabus
      - SchoolUnitOffering
      - Group
      - Person
      - Organisation
      title: Code_ObjectType
      type: string
    LogEntry:
      description: "Information runt en händelse, används för att återsända information\
        \ för att avhjälpa vid olika typer av felsökning.\n"
      example:
        severityLevel: Info
        resourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        messageType: messageType
        resourceUrl: https://openapi-generator.tech
        timeOfOccurance: 2000-01-23T04:56:07.000+00:00
        message: message
        resourceType: null
      properties:
        message:
          description: Situationssepcifik text rörande loggad händelse.
          type: string
        messageType:
          description: Hos klienten unikt ID på meddelandetypen
          type: string
        resourceType:
          $ref: '#/components/schemas/EndPointsEnum'
        resourceId:
          description: Eventuellt id relaterat till loggad händelse.
          format: uuid
          type: string
        resourceUrl:
          description: Eventuell url till relaterad fråga som låg till grund till
            loggad händelse.
          format: uri
          type: string
        severityLevel:
          description: "Loggad händelses allvarlighetsgrad.\n* _Info_ - Händelse som\
            \ ej är ett problem men kan vara bra att veta vid felsökning.\n* _Warning_\
            \ - Behöver uppmärksammas, eventuellt problem.\n* _Error_ - Problem som\
            \ kärver någon typ av åtgärd.\n"
          enum:
          - Info
          - Warning
          - Error
          type: string
        timeOfOccurance:
          description: Tidpunkt för loggad händelse.
          format: date-time
          type: string
      required:
      - message
      - severityLevel
      title: LogEntry
      type: object
    StatisticsEntry:
      description: Statistik rörande objekt synkronisering.
      example:
        newCount: 0
        resourceUrl: https://openapi-generator.tech
        updatedCount: 6
        deletedCount: 1
        timeOfOccurance: 2000-01-23T04:56:07.000+00:00
        resourceType: null
      properties:
        resourceType:
          $ref: '#/components/schemas/EndPointsEnum'
        newCount:
          description: Antalet nya objekt skapade hos klienten.
          type: integer
        updatedCount:
          description: Antalet uppdaterade objekt hos klienten.
          type: integer
        deletedCount:
          description: Antalet raderade objekt hos klienten.
          type: integer
        resourceUrl:
          description: Eventuell url för relaterad fråga som låg till grund för synkroniserade
            objekt.
          format: uri
          type: string
        timeOfOccurance:
          description: Tidpunkt för loggad händelse.
          format: date-time
          type: string
      required:
      - deletedCount
      - newCount
      - resourceType
      - updatedCount
      title: statisticsEntry
      type: object
    DeletedEntities:
      example:
        data:
          absences:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rooms:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          schoolUnitOfferings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          programmes:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          groups:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          placements:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          grades:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          syllabuses:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          studyPlans:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          attendances:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          attendanceSchedules:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          activitites:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          persons:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          calendarEvents:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organisations:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          attendanceEvents:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          duties:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pageToken: pageToken
      properties:
        data:
          $ref: '#/components/schemas/DeletedEntities_data'
        pageToken:
          description: |
            Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
          nullable: true
          type: string
      required:
      - data
      title: deletedEntities
      type: object
    Meta:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        modified: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          description: |
            Datum och tid för när entiteten skapades (RFC 3339 format tex "2015-12-12T10:30:00+01:00").
          format: date-time
          type: string
        modified:
          description: "Datum och tid för när entiteten senast uppdaterades (RFC 3339\
            \ format tex \"2015-12-12T10:30:00+01:00\"). Tidpunkten avser den senaste\
            \ tidpunkt när något av de attribut som direkt tillhör entiteten har ä\
            ndrats. Attribut som kan tas fram med parametrarna expand eller expandReferenceNames\
            \ räknas **inte** som ett attribut till entiteten, och ska således **inte**\
            \ påverka detta värde.\n"
          format: date-time
          type: string
      readOnly: true
      required:
      - created
      - modified
      title: Meta
      type: object
    OrganisationReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till ett organisationselement.
        title: OrganisationReference
    ObjectReference:
      properties:
        id:
          format: uuid
          type: string
        displayName:
          description: |
            Namn för visningsyfte för det refererade objektet. Skall endast returneras när query parametern `expandReferenceNames` är satt till "true".
          readOnly: true
          type: string
      required:
      - id
      title: ObjectReference
      type: object
    Enrolment:
      example:
        endDate: 2000-01-23
        schoolType: null
        schoolYear: 1
        cancelled: true
        specification: specification
        enroledAt: null
        educationCode: educationCode
        programme: null
        startDate: 2000-01-23
      properties:
        enroledAt:
          $ref: '#/components/schemas/SchoolUnitReference'
        schoolYear:
          description: |
            Värdet årskurs anger det år efter skolstarten för vilket en student följer undervisningen.
          maximum: 10
          minimum: 0
          type: integer
        schoolType:
          $ref: '#/components/schemas/SchoolTypesEnum'
        startDate:
          description: "Startdatum för inskrivningen (RFC 3339-format, t.ex. \"2016-10-15\"\
            ).Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för inskrivningen (RFC 3339-format, t.ex. \"2016-10-15\"\
            ). Inkluderande.\n"
          format: date
          type: string
        cancelled:
          description: Inskrivningen har avbrutits i förväg.
          type: boolean
        educationCode:
          description: Studievägskod för den aktuella inskrivningen.
          type: string
        programme:
          $ref: '#/components/schemas/Enrolment_programme'
        specification:
          description: "Kompletterande information angående innehåll i elevens utbildning,\
            \ används som avgränsning av ett visst utbildningsalternativ för exempelvis\
            \ lärlingsutbildning.\n"
          type: string
      required:
      - enroledAt
      - schoolType
      - startDate
      title: Enrolment
      type: object
    PersonReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/PersonReference_1'
    RelationTypesEnum:
      description: |
        Värdeförråd som skall användas för olika typer av relationer till ett barn eller en elev.
      enum:
      - Vårdnadshavare
      - Annan ansvarig
      - God man
      - Utsedd behörig
      title: Code_RelationType
      type: string
    GroupReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till en grupp
        title: GroupReference
    AssignmentRoleTypeEnum:
      enum:
      - Mentor
      - Förskollärare
      - Barnskötare
      - Fritidspedagog
      - Specialpedagog
      - Elevhälsopersonal
      - Pedagogisk ledare
      - Schemaläggare
      - Lärarassistent
      - Administrativ personal
      title: Code_AssignmentRole
      type: string
    SchoolUnitReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till ett organisationselement av typen skolenhet.
        title: OrganisationReference
    ProgrammeReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Identifierare för program (Programme)
        title: ProgrammeReference
    SyllabusReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till en Syllabus
        title: SyllabusReference
    CurriculumEnum:
      description: Anger vilken läroplan aktiviteten avser. För vissa skolformer saknas
        läroplan.
      enum:
      - Lgy70
      - Lgr80
      - Lpo94
      - Lpf94
      - Lpfö98
      - GR2000
      - GY2000
      - GYSÄR2000
      - GYVUX2000
      - GYVUX2001
      - GYVUX2002
      - GR2011
      - GRSÄR2011
      - SPEC2011
      - SAM2011
      - Lvux12
      - GY2011
      - GYSÄR2013
      - VU2013
      title: Code_Curriculum
      type: string
    DutyReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till en Duty
        title: DutyReference
    ActivityReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till en aktivitet
        title: ActivityReference
    CalendarEventReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till en kalenderhändelse
        title: CalendarEventReference
    PlacementReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Referens till en placering
        title: PlacementReference
    _organisations_lookup_post_request:
      example:
        ids:
        - d544563a-747a-42d3-8d37-415a101537fa
        schoolUnitCodes:
        - "55512387"
        organisationCodes:
        - F2311
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        schoolUnitCodes:
          items:
            type: string
          type: array
        organisationCodes:
          items:
            type: string
          type: array
      type: object
    _persons_lookup_post_request:
      example:
        ids:
        - d544563a-747a-42d3-8d37-415a101537fa
        civicNos:
        - "201002037271"
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        civicNos:
          items:
            description: "Personnummer, samordningsnummer eller tillfälliga personnummer,\
              \ och motsvarande för andra länder. För svenska personnummner **ska**\
              \ formatet 12 tecken utan divis användas. Se exempel.\n"
            type: string
          type: array
      type: object
    _placements_lookup_post_request:
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        personIds:
          items:
            format: uuid
            type: string
          type: array
      type: object
    _activities_lookup_post_request:
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        teachers:
          description: Hämta aktiviteter där attributet `teachers` inkluderar något
            av de angivna idn i `duty.id`.
          items:
            format: uuid
            type: string
          type: array
        members:
          description: Hämta aktiviteter där attributet `groups` inkluderar en grupp
            som matchar ett av angivna idn utifrån `groupMemberships.person.id`.
          items:
            format: uuid
            type: string
          type: array
      type: object
    _calendarEvents_lookup_post_request:
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        activities:
          items:
            format: uuid
            type: string
          type: array
        student:
          items:
            format: uuid
            type: string
          type: array
        teacher:
          items:
            format: uuid
            type: string
          type: array
      type: object
    _attendances_lookup_post_request:
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        activities:
          items:
            format: uuid
            type: string
          type: array
        students:
          items:
            format: uuid
            type: string
          type: array
        calendareEvents:
          items:
            format: uuid
            type: string
          type: array
      type: object
    _attendanceEvents_lookup_post_request:
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        person:
          items:
            format: uuid
            type: string
          type: array
        group:
          items:
            format: uuid
            type: string
          type: array
      type: object
    _attendanceSchedule_lookup_post_request:
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        placement:
          items:
            format: uuid
            type: string
          type: array
      type: object
    _subscriptions_get_request:
      properties:
        modifiedEntites:
          description: |
            En lista med datatyper där det finns uppdaterad eller ny information att hämta på respektive ändpunkt.
          items:
            $ref: '#/components/schemas/EndPointsEnum'
          type: array
        deletedEntities:
          description: |
            True indikerar att det finns information om borttagna entiteter att hämta från ändpunkten `deletedEntitites`.
          type: boolean
      type: object
    Organisation_parentOrganisation:
      allOf:
      - $ref: '#/components/schemas/OrganisationReference'
      - description: |
          Identifierare för en eventellt överliggande organisation. Kan ej peka på organisationer av typen _Skolenhet_.
    Organisation_address:
      description: Organisationens postadress
      example:
        country: country
        countyCode: 0
        streetAddress: streetAddress
        postalCode: postalCode
        locality: locality
        type: Besöksadress
        municipalityCode: 6
        realEstateDesignation: realEstateDesignation
      properties:
        type:
          enum:
          - Besöksadress
          - Leveransadress
          - Postadress
          - Fakturaadress
          title: Code_OrganisationAddressType
          type: string
        streetAddress:
          description: Gatuadress.
          type: string
        locality:
          description: Postort.
          type: string
        postalCode:
          description: Postadress.
          type: string
        countyCode:
          description: "Län, kod"
          type: integer
        municipalityCode:
          description: "Kommun, kod"
          type: integer
        realEstateDesignation:
          description: Fastighetsbeteckning
          type: string
        country:
          description: Land.
          type: string
      required:
      - locality
      - postalCode
      - streetAddress
      type: object
    ContactInfo:
      description: |
        Kontaktuppgifter till skolan eller organisationselementet. Kan användas för supportkontakt och andra publika kontaktuppgifter.
      example:
        infoType: Support
        info: info
      properties:
        infoType:
          description: "Typ av kontaktuppgift. Publika uppgifter avser uppgifter som\
            \ kan visas för allmänheten, såsom adress och telefonnummer till skolan.\n"
          enum:
          - Support
          - Publik
          title: Code_OrganisationContactInfoType
          type: string
        info:
          description: |
            Beskrivning i fritext av kontaktuppgifter till skolan eller organisationsenheten.
          type: string
      title: ContactInfo
      type: object
    externalIdentifier:
      example:
        globallyUnique: true
        context: http://linkoping.se/AD
        value: value
      properties:
        value:
          description: Identifierare för användaren.
          type: string
        context:
          description: |
            Anger för vilket sammanhang användaridentifieraren ska användas. Beskriv med en URI. Värdet kan överenskommas bilateralt mellan två integrerande parter.
          example: http://linkoping.se/AD
          type: string
        globallyUnique:
          description: |
            Anger om identifieraren är så utformad att den kan anses vara globalt unik.
          type: boolean
      required:
      - context
      - globallyUnique
      - value
      title: externalIdentifier
      type: object
    Person_civicNo:
      description: Personnummer.
      example:
        nationality: SE
        value: value
      properties:
        value:
          description: "Svenskt personnummer, tilldelat personnummer eller Skatteverkets\n\
            samordningsnummer för personen. **Ska** anges med 12 siffror utan\nseparatorer.\
            \ _Exempel: 200112240123_\n\nSamordningsnummer ska anges med 12 siffror\
            \ utan separator.\nFödelsedagen adderas med talet 60, det vill säga\
            \ någon född den 24\ni en månad får talet 84 som dag. _Exempel: 200112840123_\n\
            \nSaknas både personnummer och samordningsnummer så förekommer det att\n\
            \"tillfälligt personnummer\" definieras i elevregistret. Dessa är möjliga\n\
            att beskriva i detta fält och i så fall tillåts de två första positionerna\n\
            efter datumdelen att vara bokstäver. _Exempel: 20130101TF01_\n"
          type: string
        nationality:
          default: SE
          description: "Landskod för det land som personnumret härstammar från, enligt\
            \ ISO 3166-1 alpha-2.\n"
          type: string
      required:
      - value
      type: object
    Email:
      example:
        type: Privat
        value: value
      properties:
        value:
          format: email
          type: string
        type:
          enum:
          - Privat
          - Skola elev
          - Skola personal
          - Arbete övrigt
          title: Code_EmailType
          type: string
      required:
      - type
      - value
      title: Email
      type: object
    Phonenumber:
      example:
        mobile: true
        type: Hem
        value: value
      properties:
        value:
          description: Telefonnumret.
          type: string
        type:
          enum:
          - Hem
          - Arbete
          title: Code_PhoneNumberType
          type: string
        mobile:
          default: true
          type: boolean
      required:
      - mobile
      - type
      - value
      title: Phonenumber
      type: object
    Person_addresses_inner:
      example:
        country: country
        countyCode: 0
        streetAddress: streetAddress
        postalCode: postalCode
        locality: locality
        type: Folkbokföring
        municipalityCode: 6
        realEstateDesignation: realEstateDesignation
      properties:
        type:
          default: Folkbokföring
          enum:
          - Folkbokföring
          - Särskild postadress
          - Tillfällig adress
          - Postadress
          title: Code_AddressType
          type: string
        streetAddress:
          description: Gatuadress.
          type: string
        locality:
          description: Postort.
          type: string
        postalCode:
          description: Postadress.
          type: string
        countyCode:
          description: "Län, kod"
          type: integer
        municipalityCode:
          description: "Kommun, kod"
          type: integer
        realEstateDesignation:
          description: Fastighetsbeteckning
          type: string
        country:
          description: Land.
          type: string
      required:
      - country
      - locality
      - postalCode
      - streetAddress
      type: object
    Person_responsibles_inner:
      example:
        relationType: null
        person: null
      properties:
        person:
          $ref: '#/components/schemas/PersonReference'
        relationType:
          $ref: '#/components/schemas/RelationTypesEnum'
      type: object
    Duty_person:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Identifierare av person som tjänsten är knuten till.
    Duty_assignmentRole_inner:
      properties:
        group:
          $ref: '#/components/schemas/GroupReference'
        assignmentRoleType:
          $ref: '#/components/schemas/AssignmentRoleTypeEnum'
        startDate:
          description: "Startdatum för tjänstens relation till gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för tjänstens relation till gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
      required:
      - assignmentRoleType
      - group
      type: object
    Placement_placedAt:
      allOf:
      - $ref: '#/components/schemas/SchoolUnitReference'
      - description: Skolenhet där barnet är placerat.
    Placement_group:
      allOf:
      - $ref: '#/components/schemas/GroupReference'
      - description: Barngrupp eller avdelning knutet till denna placering.
    Placement_child:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Identifierare av person som placeringen avser.
    GroupMembership:
      properties:
        person:
          $ref: '#/components/schemas/PersonReference'
        startDate:
          description: "Startdatum för personens medlemskap i gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för personens medlemskap i gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
      required:
      - person
      title: GroupMembership
      type: object
    Group_allOf:
      properties:
        groupMemberships:
          description: |
            Gruppmedlemskap anger att en person är medlem i en grupp och vilken tidsperiod medlemskapet omfattar.
          items:
            $ref: '#/components/schemas/GroupMembership'
          type: array
      type: object
    Programme_parentProgramme:
      allOf:
      - $ref: '#/components/schemas/ProgrammeReference'
      - description: "Referens till det program en programinriktning/utgång tillhö\
          r.\nAnges endast för typerna _Programinriktning_ och _Utgång_.\nProgram\
          \ av typen _Utgång_ pekar alltid ett program av typen _Programinriktning_.\n\
          Program av typen _Programinriktning_ perkar alltid på ett program typen\n\
          _Yrkesprogram_, _Högskoleförberedande program_, _Intruduktionsprogram_,\n\
          _Nationellt yrkespaket_, _Regionalt yrkespaket_ eller _Fjärde tekniskt å\
          r_.\nFör övriga programtyper skall värdet inte vara definierat.\n"
    Programme_content_inner_content_inner:
      allOf:
      - $ref: '#/components/schemas/SyllabusReference'
      - description: Lista av ingående kursers kursplaner.
    Programme_content_inner:
      example:
        type: Gymnasiegemensamma
        content:
        - null
        - null
        points: 0
      properties:
        type:
          description: "Anger ingående kursers relation till programmet, såsom Programgemensamma.\
            \ Typen _Inriktning_ kan endast anges för program av typen _Programinriktning_.\n"
          enum:
          - Gymnasiegemensamma
          - Programgemensamma
          - Inriktning
          - Programfördjupning
          - Gymnasiearbete
          - Individuellt val
          title: Code_ProgrammeContentType
          type: string
        points:
          description: Poäng för innehållstypen i förekommande fall.
          type: integer
        content:
          items:
            $ref: '#/components/schemas/Programme_content_inner_content_inner'
          type: array
      required:
      - type
      type: object
    SpecialisationCourseContent:
      description: Beskrivning av innehållet i en specialiseringskurs på gymnasiet.
      example:
        titleEnglish: titleEnglish
        description: description
        title: title
        descriptionEnglish: descriptionEnglish
      properties:
        title:
          description: Titel på specialiseringskurs.
          type: string
        description:
          description: Beskrivning av specialiseringskurs.
          type: string
        titleEnglish:
          description: Eventuell engelsk titel på specialiseringskurs.
          type: string
        descriptionEnglish:
          description: Eventuell engelsk beskrivning av specialiseringskurs.
          type: string
      required:
      - description
      - title
      title: SpecialisationCourseContent
      type: object
    SchoolUnitOffering_offeredAt:
      allOf:
      - $ref: '#/components/schemas/SchoolUnitReference'
      - description: Identifierare för skolenheten (SchoolUnit)
    SchoolUnitOffering_offeredSyllabuses_inner:
      allOf:
      - $ref: '#/components/schemas/SyllabusReference'
      - description: "Identifierare för kursplaner (Syllabus), innehåller alla ämnen/kurser,\
          \ även de som också beskrivs genom offeredProgrammes.\n"
    StudyPlan_student:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Den elev som studieplanen gäller för.
    StudyPlanSyllabus:
      example:
        syllabus: null
        note: note
        hours: 6
        endDate: 2000-01-23
        startDate: 2000-01-23
      properties:
        syllabus:
          $ref: '#/components/schemas/SyllabusReference'
        note:
          description: Notering angående kursens status i elevens studieplan
          type: string
        startDate:
          description: "Startdatum när eleven läser kursen (RFC 3339-format, t.ex.\
            \ \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för när eleven läser kursen (RFC 3339-format, t.ex.\
            \ \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        hours:
          description: |
            Planlagda timmar för elevens deltagande i kursen. Främst avsedd för studieplaner till vuxenutbildning.
          type: integer
      required:
      - syllabus
      title: StudyPlanSyllabus
      type: object
    StudyPlanContent:
      example:
        syllabuses:
        - syllabus: null
          note: note
          hours: 6
          endDate: 2000-01-23
          startDate: 2000-01-23
        - syllabus: null
          note: note
          hours: 6
          endDate: 2000-01-23
          startDate: 2000-01-23
        title: title
        type: Gymnasiegemensamma
        points: 0
      properties:
        title:
          description: Anger rubriken i elevens studieplan
          type: string
        type:
          enum:
          - Gymnasiegemensamma
          - Programgemensamma
          - Inriktning
          - Programfördjupning
          - Gymnasiearbete
          - Individuellt val
          - Borttagna
          - Utökade
          title: Code_StudyPlanContentType
          type: string
        points:
          description: Anger poängtalet för den aktuella kategorin av kurser
          type: integer
        syllabuses:
          items:
            $ref: '#/components/schemas/StudyPlanSyllabus'
          type: array
      required:
      - syllabuses
      title: StudyPlanContent
      type: object
    StudyPlanNotes:
      example:
        note: note
        type: Anteckningar
      properties:
        type:
          enum:
          - Anteckningar
          - Andra insatser som är gynnsamma för elevens kunskapsutveckling
          - Elevens tidigare arbetslivserfarenhet och studier
          - Validering av kunskaper och kompetenser
          - Elevens mål med studierna
          title: Code_StudyPlanNoteType
          type: string
        note:
          type: string
      required:
      - note
      - type
      title: StudyPlanNotes
      type: object
    DutyAssignment:
      example:
        endDate: 2000-01-23
        minutesPlanned: 2
        duty: null
        grader: true
        startDate: 2000-01-23
      properties:
        duty:
          $ref: '#/components/schemas/DutyReference'
        startDate:
          description: "Datum för när lärarens deltagande i aktiviteten startar (RFC\
            \ 3339-format, t.ex. \"2016-10-15\").\n"
          format: date
          type: string
        endDate:
          description: "Datum för när lärarens deltagande i aktiviteten slutar (RFC\
            \ 3339-format, t.ex. \"2016-10-15\").\n"
          format: date
          type: string
        minutesPlanned:
          description: Det antal minuter läraren är kopplad till aktiviteten
          type: integer
        grader:
          description: Markerar att läraren har rollen som betygsättande lärare för
            aktiviteten
          type: boolean
      required:
      - duty
      title: DutyAssignment
      type: object
    Activity_syllabus:
      allOf:
      - $ref: '#/components/schemas/SyllabusReference'
      - description: Det kurs- eller ämnesplan som aktiviteten är knuten till.
    Activity_organisation:
      allOf:
      - $ref: '#/components/schemas/OrganisationReference'
      - description: Den skolenhet/skola som aktiviteten är knuten till.
    Activity_parentActivity:
      allOf:
      - $ref: '#/components/schemas/ActivityReference'
      - description: |
          Möjlighet att koppla aktiviteten till en eller flera ursprungliga “föräldraaktiviteter”.
    CalendarEvent_activity:
      allOf:
      - $ref: '#/components/schemas/ActivityReference'
      - description: Den aktivitet kalenderhändelsen är kopplad till
    StudentException:
      description: "Anger avvikelser beträffande elevs deltagande, tid och längd fö\
        r ett enstaka kalendertillfälle.\n"
      example:
        student: null
        participates: true
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        teachingLength: 1
      properties:
        student:
          $ref: '#/components/schemas/PersonReference'
        participates:
          description: |
            Används för att ange om en elev deltar på ett visst kalendertillfälle.
          type: boolean
        startTime:
          description: |
            Starttid för undantaget (RFC 3339 format tex "2015-12-12T10:30:00+01:00").
          format: date-time
          type: string
        endTime:
          description: |
            Sluttid för undantaget (RFC 3339 format tex "2015-12-12T11:00:00+01:00").
          format: date-time
          type: string
        teachingLength:
          description: "Undervisningstid i minuter för eleven. Om den ej anges så\
            \ gäller det som är angivet i, i första hand, CalendarEvent, och annars\
            \ i Activity.\n"
          type: integer
      required:
      - participates
      - student
      title: StudentException
      type: object
    TeacherException:
      description: "Anger avvikelser beträffande lärares ansvar, tid och längd fö\
        r ett enstaka kalendertillfälle.\n"
      example:
        participates: true
        duty: null
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        teachingLength: 5
      properties:
        duty:
          $ref: '#/components/schemas/DutyReference'
        participates:
          description: |
            Används för att ange om en lärare ska delta på ett visst kalendertillfälle.
          type: boolean
        startTime:
          description: |
            Starttid för undantaget (RFC 3339 format tex "2015-12-12T10:30:00+01:00").
          format: date-time
          type: string
        endTime:
          description: |
            Sluttid för undantaget (RFC 3339 format tex "2015-12-12T10:30:00+01:00").
          format: date-time
          type: string
        teachingLength:
          description: "Undervisningstid i minuter för läraren. Om den ej anges så\
            \ gäller det som är angivet i, i första hand, CalendarEvent, och annars\
            \ i Activity.\n"
          type: integer
      required:
      - duty
      - participates
      title: TeacherException
      type: object
    CalendarEvent_rooms_inner:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Den lokal eller plats som är bokad för kalenderhändelsen.
        required:
        - id
        title: RoomReference
    CalendarEvent_resources_inner:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: En bokningsbar resurs som inte är en lokal.
        required:
        - id
        title: ResourceReference
    CalendarEvent__embedded:
      example:
        activity:
          syllabus: null
          parentActivity: null
          endDate: 2000-01-23
          displayName: displayName
          groups:
          - null
          - null
          organisation: null
          calendarEventsRequired: true
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          teachers:
          - endDate: 2000-01-23
            minutesPlanned: 2
            duty: null
            grader: true
            startDate: 2000-01-23
          - endDate: 2000-01-23
            minutesPlanned: 2
            duty: null
            grader: true
            startDate: 2000-01-23
          minutesPlanned: 5
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          activityType: Undervisning
          startDate: 2000-01-23
        attendance:
        - invalidAbsenceMinutes: 3
          otherAttendanceMinutes: 2
          student: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          calendarEvent: null
          absenceReason: absenceReason
          reporter: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          reportedTimestamp: 2000-01-23T04:56:07.000+00:00
          isReported: true
          attendanceMinutes: 7
          validAbsenceMinutes: 9
        - invalidAbsenceMinutes: 3
          otherAttendanceMinutes: 2
          student: null
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          calendarEvent: null
          absenceReason: absenceReason
          reporter: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          reportedTimestamp: 2000-01-23T04:56:07.000+00:00
          isReported: true
          attendanceMinutes: 7
          validAbsenceMinutes: 9
      properties:
        activity:
          $ref: '#/components/schemas/Activity'
        attendance:
          items:
            $ref: '#/components/schemas/Attendance'
          type: array
      type: object
    Attendance_student:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Referens till eleven.
    Attendance_reporter:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Person som rapporterat kalenderhändelsen.
    AttendanceEvent_person:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Referens till barnet eller eleven
    AttendanceEvent_registeredBy:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Anger den person som registrat in- respektive utcheckning.
    AttendanceEvent_group:
      allOf:
      - $ref: '#/components/schemas/GroupReference'
      - description: Den avdelning eller grupp på förskoleenheten som närvaron.
    AttendanceEvent__embedded:
      example:
        registeredBy:
          personStatus: Aktiv
          addresses:
          - country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Folkbokföring
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          - country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Folkbokföring
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          securityMarking: Ingen
          givenName: givenName
          sex: Man
          photo: https://openapi-generator.tech
          birthDate: 2000-01-23
          civicNo:
            nationality: SE
            value: value
          phoneNumbers:
          - mobile: true
            type: Hem
            value: value
          - mobile: true
            type: Hem
            value: value
          externalIdentifiers:
          - globallyUnique: true
            context: http://linkoping.se/AD
            value: value
          - globallyUnique: true
            context: http://linkoping.se/AD
            value: value
          emails:
          - type: Privat
            value: value
          - type: Privat
            value: value
          eduPersonPrincipalNames:
          - eduPersonPrincipalNames
          - eduPersonPrincipalNames
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          familyName: familyName
          middleName: middleName
          enrolments:
          - endDate: 2000-01-23
            schoolType: null
            schoolYear: 1
            cancelled: true
            specification: specification
            enroledAt: null
            educationCode: educationCode
            programme: null
            startDate: 2000-01-23
          - endDate: 2000-01-23
            schoolType: null
            schoolYear: 1
            cancelled: true
            specification: specification
            enroledAt: null
            educationCode: educationCode
            programme: null
            startDate: 2000-01-23
          responsibles:
          - relationType: null
            person: null
          - relationType: null
            person: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        person:
          personStatus: Aktiv
          addresses:
          - country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Folkbokföring
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          - country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Folkbokföring
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          securityMarking: Ingen
          givenName: givenName
          sex: Man
          photo: https://openapi-generator.tech
          birthDate: 2000-01-23
          civicNo:
            nationality: SE
            value: value
          phoneNumbers:
          - mobile: true
            type: Hem
            value: value
          - mobile: true
            type: Hem
            value: value
          externalIdentifiers:
          - globallyUnique: true
            context: http://linkoping.se/AD
            value: value
          - globallyUnique: true
            context: http://linkoping.se/AD
            value: value
          emails:
          - type: Privat
            value: value
          - type: Privat
            value: value
          eduPersonPrincipalNames:
          - eduPersonPrincipalNames
          - eduPersonPrincipalNames
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          familyName: familyName
          middleName: middleName
          enrolments:
          - endDate: 2000-01-23
            schoolType: null
            schoolYear: 1
            cancelled: true
            specification: specification
            enroledAt: null
            educationCode: educationCode
            programme: null
            startDate: 2000-01-23
          - endDate: 2000-01-23
            schoolType: null
            schoolYear: 1
            cancelled: true
            specification: specification
            enroledAt: null
            educationCode: educationCode
            programme: null
            startDate: 2000-01-23
          responsibles:
          - relationType: null
            person: null
          - relationType: null
            person: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group:
          groupType: null
          endDate: 2000-01-23
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          schoolType: null
          organisation: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23
      properties:
        registeredBy:
          $ref: '#/components/schemas/Person'
        person:
          $ref: '#/components/schemas/Person'
        group:
          $ref: '#/components/schemas/GroupFragment'
      readOnly: true
      type: object
    AttendanceSchedule_placement:
      allOf:
      - $ref: '#/components/schemas/PlacementReference'
      - description: Referens till en placeringen schemat avser.
    AttendanceScheduleState_registeredBy:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Referens till den person som registrerat tillståndet.
    AttendanceScheduleState:
      example:
        registeredBy: null
        registeredAt: 2000-01-23T04:56:07.000+00:00
        comment: comment
        state: Godkänt
      properties:
        state:
          description: Beskriver schemats tillstånd.
          enum:
          - Godkänt
          - Begärt
          - Nekat
          title: Code_AttendanceScheduleState
          type: string
        registeredAt:
          description: "Tid och datum för tillstånd (RFC 3339 format, tex \"2015-12-12T10:30:00+01:00\"\
            ).\n"
          format: date-time
          type: string
        comment:
          description: En kommentar angående tillståndet.
          type: string
        registeredBy:
          $ref: '#/components/schemas/AttendanceScheduleState_registeredBy'
      required:
      - registeredAt
      - state
      title: AttendanceScheduleState
      type: object
    AttendanceScheduleEntry:
      example:
        dayOfWeek: Måndag
        weekOffset: 6
        startTime: startTime
        endTime: 1
      properties:
        weekOffset:
          description: "Anger vecka för alternerande schema, exempelvis 0, 1, eller\
            \ 2 beroende på hur många olika veckor som är specificerade i schemat.\n"
          type: integer
        dayOfWeek:
          description: |
            Anger veckodag.
          enum:
          - Måndag
          - Tisdag
          - Onsdag
          - Torsdag
          - Fredag
          - Lördag
          - Söndag
          type: string
        startTime:
          description: "Starttid på dagen för schemat (IS08601 format, t.ex. \"08:30\"\
            )."
          format: "^[0-9]{2}:[0-9]{2}$"
          type: string
        endTime:
          description: "Sluttid på dagen för schemat (IS08601 format, t.ex. \"15:30\"\
            )."
          format: "^[0-9]{2}:[0-9]{2}$"
          type: integer
      required:
      - dayOfWeek
      - endTime
      - startTime
      - weekOffset
      title: AttendanceScheduleEntry
      type: object
    Absence_organisation:
      allOf:
      - $ref: '#/components/schemas/SchoolUnitReference'
      - description: Den skolenhet som den anmälda frånvaron avser.
    Absence_registeredBy:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: |
          Referens till den person som registrerat den anmälda frånvaron.
    AggregatedAttendance_student:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Referens till eleven
    AggregatedAttendance__embedded:
      example:
        activity:
          syllabus: null
          parentActivity: null
          endDate: 2000-01-23
          displayName: displayName
          groups:
          - null
          - null
          organisation: null
          calendarEventsRequired: true
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          teachers:
          - endDate: 2000-01-23
            minutesPlanned: 2
            duty: null
            grader: true
            startDate: 2000-01-23
          - endDate: 2000-01-23
            minutesPlanned: 2
            duty: null
            grader: true
            startDate: 2000-01-23
          minutesPlanned: 5
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          activityType: Undervisning
          startDate: 2000-01-23
        student:
          personStatus: Aktiv
          addresses:
          - country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Folkbokföring
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          - country: country
            countyCode: 0
            streetAddress: streetAddress
            postalCode: postalCode
            locality: locality
            type: Folkbokföring
            municipalityCode: 6
            realEstateDesignation: realEstateDesignation
          securityMarking: Ingen
          givenName: givenName
          sex: Man
          photo: https://openapi-generator.tech
          birthDate: 2000-01-23
          civicNo:
            nationality: SE
            value: value
          phoneNumbers:
          - mobile: true
            type: Hem
            value: value
          - mobile: true
            type: Hem
            value: value
          externalIdentifiers:
          - globallyUnique: true
            context: http://linkoping.se/AD
            value: value
          - globallyUnique: true
            context: http://linkoping.se/AD
            value: value
          emails:
          - type: Privat
            value: value
          - type: Privat
            value: value
          eduPersonPrincipalNames:
          - eduPersonPrincipalNames
          - eduPersonPrincipalNames
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
          familyName: familyName
          middleName: middleName
          enrolments:
          - endDate: 2000-01-23
            schoolType: null
            schoolYear: 1
            cancelled: true
            specification: specification
            enroledAt: null
            educationCode: educationCode
            programme: null
            startDate: 2000-01-23
          - endDate: 2000-01-23
            schoolType: null
            schoolYear: 1
            cancelled: true
            specification: specification
            enroledAt: null
            educationCode: educationCode
            programme: null
            startDate: 2000-01-23
          responsibles:
          - relationType: null
            person: null
          - relationType: null
            person: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        activity:
          $ref: '#/components/schemas/Activity'
        student:
          $ref: '#/components/schemas/Person'
      type: object
    Grade_organisation:
      allOf:
      - $ref: '#/components/schemas/SchoolUnitReference'
      - description: Skolenheten där undervisningen genomförts.
    Grade_registeredBy:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Den person som registrerade betyget.
    Grade_gradingTeacher:
      allOf:
      - $ref: '#/components/schemas/PersonReference'
      - description: Den behöriga lärare som är ansvarig för betyget.
    Grade_group:
      allOf:
      - $ref: '#/components/schemas/GroupReference'
      - description: Anger vilken grupp eleven ingick i.
    Grade_diplomaProject:
      example:
        titleEnglish: titleEnglish
        description: description
        title: title
        descriptionEnglish: descriptionEnglish
      properties:
        title:
          description: Titel på gymnasiearbete.
          type: string
        description:
          description: Beskrivning av gymnasiearbete.
          type: string
        titleEnglish:
          description: Eventuell engelsk titel på gymnasiearbete.
          type: string
        descriptionEnglish:
          description: Eventuell engelsk beskrivning av gymnasiearbete.
          type: string
      required:
      - description
      - title
      type: object
    Subscription_allOf:
      properties:
        id:
          format: uuid
          type: string
        expires:
          format: date-time
          type: string
      required:
      - expires
      - id
      type: object
    PersonExpanded_allOf__embedded_groupMemberships:
      properties:
        group:
          $ref: '#/components/schemas/GroupFragment'
        startDate:
          description: "Startdatum för personens medlemskap i gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för personens medlemskap i gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
      type: object
    PersonExpanded_allOf__embedded:
      properties:
        responsibleFor:
          description: |
            De barn/barnen vilka personen har ansvar för.
          items:
            $ref: '#/components/schemas/Person_responsibles_inner'
          type: array
        placements:
          description: |
            En lista med placeringar för personen.
          items:
            $ref: '#/components/schemas/Placement'
          type: array
        ownedPlacements:
          description: |
            En lista med placeringar där personen är satt som ägare.
          items:
            $ref: '#/components/schemas/Placement'
          type: array
        duties:
          description: Personens aktuella tjänstgöring
          items:
            $ref: '#/components/schemas/Duty'
          type: array
        groupMemberships:
          description: |
            En lista med grupper där personen är medlem i
          items:
            $ref: '#/components/schemas/PersonExpanded_allOf__embedded_groupMemberships'
          type: array
      type: object
    PersonExpanded_allOf:
      properties:
        _embedded:
          $ref: '#/components/schemas/PersonExpanded_allOf__embedded'
      type: object
    PlacementExpanded_allOf__embedded:
      properties:
        child:
          $ref: '#/components/schemas/Person'
        owners:
          items:
            $ref: '#/components/schemas/Person'
          type: array
      type: object
    PlacementExpanded_allOf:
      properties:
        _embedded:
          $ref: '#/components/schemas/PlacementExpanded_allOf__embedded'
      type: object
    DutyExpanded_allOf__embedded:
      properties:
        person:
          $ref: '#/components/schemas/Person'
      type: object
    DutyExpanded_allOf:
      properties:
        _embedded:
          $ref: '#/components/schemas/DutyExpanded_allOf__embedded'
      type: object
    GroupExpanded_allOf__embedded_assignmentRoles:
      properties:
        duty:
          $ref: '#/components/schemas/DutyReference'
        assignmentRoleType:
          $ref: '#/components/schemas/AssignmentRoleTypeEnum'
        startDate:
          description: "Startdatum för tjänstens relation till gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
        endDate:
          description: "Slutdatum för tjänstens relation till gruppen (RFC 3339-format,\
            \ t.ex. \"2016-10-15\"). Inkluderande.\n"
          format: date
          type: string
      type: object
    GroupExpanded_allOf__embedded:
      properties:
        assignmentRoles:
          items:
            $ref: '#/components/schemas/GroupExpanded_allOf__embedded_assignmentRoles'
          type: array
      type: object
    GroupExpanded_allOf:
      properties:
        _embedded:
          $ref: '#/components/schemas/GroupExpanded_allOf__embedded'
      type: object
    ActivityExpanded_allOf__embedded:
      properties:
        groups:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        syllabus:
          $ref: '#/components/schemas/Syllabus'
        teachers:
          items:
            $ref: '#/components/schemas/Duty'
          type: array
      type: object
    ActivityExpanded_allOf:
      properties:
        _embedded:
          $ref: '#/components/schemas/ActivityExpanded_allOf__embedded'
      type: object
    CreateSubscription_resourceTypes_inner:
      example:
        resource: null
      properties:
        resource:
          $ref: '#/components/schemas/EndPointsEnum'
      type: object
    DeletedEntities_data:
      example:
        absences:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rooms:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        schoolUnitOfferings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        programmes:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        groups:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        placements:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        grades:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        syllabuses:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        studyPlans:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attendances:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attendanceSchedules:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        activitites:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        persons:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        calendarEvents:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organisations:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attendanceEvents:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        duties:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        absences:
          items:
            format: uuid
            type: string
          type: array
        attendanceEvents:
          items:
            format: uuid
            type: string
          type: array
        attendances:
          items:
            format: uuid
            type: string
          type: array
        grades:
          items:
            format: uuid
            type: string
          type: array
        calendarEvents:
          items:
            format: uuid
            type: string
          type: array
        attendanceSchedules:
          items:
            format: uuid
            type: string
          type: array
        resources:
          items:
            format: uuid
            type: string
          type: array
        rooms:
          items:
            format: uuid
            type: string
          type: array
        activitites:
          items:
            format: uuid
            type: string
          type: array
        duties:
          items:
            format: uuid
            type: string
          type: array
        placements:
          items:
            format: uuid
            type: string
          type: array
        studyPlans:
          items:
            format: uuid
            type: string
          type: array
        programmes:
          items:
            format: uuid
            type: string
          type: array
        syllabuses:
          items:
            format: uuid
            type: string
          type: array
        schoolUnitOfferings:
          items:
            format: uuid
            type: string
          type: array
        groups:
          items:
            format: uuid
            type: string
          type: array
        persons:
          items:
            format: uuid
            type: string
          type: array
        organisations:
          items:
            format: uuid
            type: string
          type: array
      type: object
    Enrolment_programme:
      allOf:
      - $ref: '#/components/schemas/ProgrammeReference'
      - description: "Referens till inskrivningens program, inriktning eller utgå\
          ng."
    PersonReference_1:
      description: Referens till en person
      properties:
        securityMarking:
          description: |
            Återspeglar värdet från folkbokföringsregistret.
          enum:
          - Ingen
          - Sekretessmarkering
          - Skyddad folkbokföring
          title: Code_SecurityMarking
          type: string
      title: PersonReference
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
